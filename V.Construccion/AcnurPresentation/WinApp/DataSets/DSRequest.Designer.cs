//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34209
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WinApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSRequest")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSRequest : global::System.Data.DataSet {
        
        private EventsDataTable tableEvents;
        
        private GoodsDataTable tableGoods;
        
        private RequestDataTable tableRequest;
        
        private ServicesDataTable tableServices;
        
        private global::System.Data.DataRelation relationEvents;
        
        private global::System.Data.DataRelation relationGoods;
        
        private global::System.Data.DataRelation relationServices;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DSRequest() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DSRequest(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Events"] != null)) {
                    base.Tables.Add(new EventsDataTable(ds.Tables["Events"]));
                }
                if ((ds.Tables["Goods"] != null)) {
                    base.Tables.Add(new GoodsDataTable(ds.Tables["Goods"]));
                }
                if ((ds.Tables["Request"] != null)) {
                    base.Tables.Add(new RequestDataTable(ds.Tables["Request"]));
                }
                if ((ds.Tables["Services"] != null)) {
                    base.Tables.Add(new ServicesDataTable(ds.Tables["Services"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EventsDataTable Events {
            get {
                return this.tableEvents;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GoodsDataTable Goods {
            get {
                return this.tableGoods;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RequestDataTable Request {
            get {
                return this.tableRequest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServicesDataTable Services {
            get {
                return this.tableServices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DSRequest cln = ((DSRequest)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Events"] != null)) {
                    base.Tables.Add(new EventsDataTable(ds.Tables["Events"]));
                }
                if ((ds.Tables["Goods"] != null)) {
                    base.Tables.Add(new GoodsDataTable(ds.Tables["Goods"]));
                }
                if ((ds.Tables["Request"] != null)) {
                    base.Tables.Add(new RequestDataTable(ds.Tables["Request"]));
                }
                if ((ds.Tables["Services"] != null)) {
                    base.Tables.Add(new ServicesDataTable(ds.Tables["Services"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEvents = ((EventsDataTable)(base.Tables["Events"]));
            if ((initTable == true)) {
                if ((this.tableEvents != null)) {
                    this.tableEvents.InitVars();
                }
            }
            this.tableGoods = ((GoodsDataTable)(base.Tables["Goods"]));
            if ((initTable == true)) {
                if ((this.tableGoods != null)) {
                    this.tableGoods.InitVars();
                }
            }
            this.tableRequest = ((RequestDataTable)(base.Tables["Request"]));
            if ((initTable == true)) {
                if ((this.tableRequest != null)) {
                    this.tableRequest.InitVars();
                }
            }
            this.tableServices = ((ServicesDataTable)(base.Tables["Services"]));
            if ((initTable == true)) {
                if ((this.tableServices != null)) {
                    this.tableServices.InitVars();
                }
            }
            this.relationEvents = this.Relations["Events"];
            this.relationGoods = this.Relations["Goods"];
            this.relationServices = this.Relations["Services"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DSRequest";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSRequest.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEvents = new EventsDataTable();
            base.Tables.Add(this.tableEvents);
            this.tableGoods = new GoodsDataTable();
            base.Tables.Add(this.tableGoods);
            this.tableRequest = new RequestDataTable();
            base.Tables.Add(this.tableRequest);
            this.tableServices = new ServicesDataTable();
            base.Tables.Add(this.tableServices);
            this.relationEvents = new global::System.Data.DataRelation("Events", new global::System.Data.DataColumn[] {
                        this.tableRequest.IdRequestColumn}, new global::System.Data.DataColumn[] {
                        this.tableEvents.IdRequestColumn}, false);
            this.Relations.Add(this.relationEvents);
            this.relationGoods = new global::System.Data.DataRelation("Goods", new global::System.Data.DataColumn[] {
                        this.tableRequest.IdRequestColumn}, new global::System.Data.DataColumn[] {
                        this.tableGoods.IdRequestColumn}, false);
            this.Relations.Add(this.relationGoods);
            this.relationServices = new global::System.Data.DataRelation("Services", new global::System.Data.DataColumn[] {
                        this.tableRequest.IdRequestColumn}, new global::System.Data.DataColumn[] {
                        this.tableServices.IdRequestColumn}, false);
            this.Relations.Add(this.relationServices);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEvents() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGoods() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRequest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeServices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSRequest ds = new DSRequest();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EventsRowChangeEventHandler(object sender, EventsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GoodsRowChangeEventHandler(object sender, GoodsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RequestRowChangeEventHandler(object sender, RequestRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ServicesRowChangeEventHandler(object sender, ServicesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EventsDataTable : global::System.Data.TypedTableBase<EventsRow> {
            
            private global::System.Data.DataColumn columnIdEvent;
            
            private global::System.Data.DataColumn columnIdRequest;
            
            private global::System.Data.DataColumn columnIdAccommodationType;
            
            private global::System.Data.DataColumn columnEventName;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnNumberParticipants;
            
            private global::System.Data.DataColumn columnVideoBeam;
            
            private global::System.Data.DataColumn columnFlipchart;
            
            private global::System.Data.DataColumn columnFlipchartQuantity;
            
            private global::System.Data.DataColumn columnInternet;
            
            private global::System.Data.DataColumn columnMinimumBandwith;
            
            private global::System.Data.DataColumn columnRentedComputers;
            
            private global::System.Data.DataColumn columnRentedComputerQuantity;
            
            private global::System.Data.DataColumn columnComputerSpecifications;
            
            private global::System.Data.DataColumn columnMicrophoneAmplification;
            
            private global::System.Data.DataColumn columnMicrophoneSpecifications;
            
            private global::System.Data.DataColumn columnSimultaneusTranslation;
            
            private global::System.Data.DataColumn columnLanguage;
            
            private global::System.Data.DataColumn columnOtherResources;
            
            private global::System.Data.DataColumn columnNumberPassengers;
            
            private global::System.Data.DataColumn columnOrigin;
            
            private global::System.Data.DataColumn columnDestination;
            
            private global::System.Data.DataColumn columnNumberRooms;
            
            private global::System.Data.DataColumn columnBreakfast;
            
            private global::System.Data.DataColumn columnCoffeBreakAM;
            
            private global::System.Data.DataColumn columnLunch;
            
            private global::System.Data.DataColumn columnCoffeBreakPM;
            
            private global::System.Data.DataColumn columnDinner;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnAccommodationType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsDataTable() {
                this.TableName = "Events";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EventsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EventsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdEventColumn {
                get {
                    return this.columnIdEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdRequestColumn {
                get {
                    return this.columnIdRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdAccommodationTypeColumn {
                get {
                    return this.columnIdAccommodationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventNameColumn {
                get {
                    return this.columnEventName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberParticipantsColumn {
                get {
                    return this.columnNumberParticipants;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VideoBeamColumn {
                get {
                    return this.columnVideoBeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlipchartColumn {
                get {
                    return this.columnFlipchart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlipchartQuantityColumn {
                get {
                    return this.columnFlipchartQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InternetColumn {
                get {
                    return this.columnInternet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinimumBandwithColumn {
                get {
                    return this.columnMinimumBandwith;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentedComputersColumn {
                get {
                    return this.columnRentedComputers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentedComputerQuantityColumn {
                get {
                    return this.columnRentedComputerQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComputerSpecificationsColumn {
                get {
                    return this.columnComputerSpecifications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MicrophoneAmplificationColumn {
                get {
                    return this.columnMicrophoneAmplification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MicrophoneSpecificationsColumn {
                get {
                    return this.columnMicrophoneSpecifications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SimultaneusTranslationColumn {
                get {
                    return this.columnSimultaneusTranslation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LanguageColumn {
                get {
                    return this.columnLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherResourcesColumn {
                get {
                    return this.columnOtherResources;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberPassengersColumn {
                get {
                    return this.columnNumberPassengers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginColumn {
                get {
                    return this.columnOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DestinationColumn {
                get {
                    return this.columnDestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberRoomsColumn {
                get {
                    return this.columnNumberRooms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreakfastColumn {
                get {
                    return this.columnBreakfast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoffeBreakAMColumn {
                get {
                    return this.columnCoffeBreakAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LunchColumn {
                get {
                    return this.columnLunch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoffeBreakPMColumn {
                get {
                    return this.columnCoffeBreakPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DinnerColumn {
                get {
                    return this.columnDinner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccommodationTypeColumn {
                get {
                    return this.columnAccommodationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow this[int index] {
                get {
                    return ((EventsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEventsRow(EventsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow AddEventsRow(
                        RequestRow parentRequestRowByEvents, 
                        int IdAccommodationType, 
                        string EventName, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        System.TimeSpan StartTime, 
                        System.TimeSpan EndTime, 
                        int NumberParticipants, 
                        bool VideoBeam, 
                        bool Flipchart, 
                        int FlipchartQuantity, 
                        bool Internet, 
                        int MinimumBandwith, 
                        bool RentedComputers, 
                        int RentedComputerQuantity, 
                        string ComputerSpecifications, 
                        bool MicrophoneAmplification, 
                        string MicrophoneSpecifications, 
                        bool SimultaneusTranslation, 
                        string Language, 
                        string OtherResources, 
                        int NumberPassengers, 
                        string Origin, 
                        string Destination, 
                        int NumberRooms, 
                        bool Breakfast, 
                        bool CoffeBreakAM, 
                        bool Lunch, 
                        bool CoffeBreakPM, 
                        bool Dinner, 
                        bool Active, 
                        string AccommodationType) {
                EventsRow rowEventsRow = ((EventsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        IdAccommodationType,
                        EventName,
                        StartDate,
                        EndDate,
                        StartTime,
                        EndTime,
                        NumberParticipants,
                        VideoBeam,
                        Flipchart,
                        FlipchartQuantity,
                        Internet,
                        MinimumBandwith,
                        RentedComputers,
                        RentedComputerQuantity,
                        ComputerSpecifications,
                        MicrophoneAmplification,
                        MicrophoneSpecifications,
                        SimultaneusTranslation,
                        Language,
                        OtherResources,
                        NumberPassengers,
                        Origin,
                        Destination,
                        NumberRooms,
                        Breakfast,
                        CoffeBreakAM,
                        Lunch,
                        CoffeBreakPM,
                        Dinner,
                        Active,
                        AccommodationType};
                if ((parentRequestRowByEvents != null)) {
                    columnValuesArray[1] = parentRequestRowByEvents[0];
                }
                rowEventsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEventsRow);
                return rowEventsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow FindByIdEvent(int IdEvent) {
                return ((EventsRow)(this.Rows.Find(new object[] {
                            IdEvent})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EventsDataTable cln = ((EventsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EventsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdEvent = base.Columns["IdEvent"];
                this.columnIdRequest = base.Columns["IdRequest"];
                this.columnIdAccommodationType = base.Columns["IdAccommodationType"];
                this.columnEventName = base.Columns["EventName"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnNumberParticipants = base.Columns["NumberParticipants"];
                this.columnVideoBeam = base.Columns["VideoBeam"];
                this.columnFlipchart = base.Columns["Flipchart"];
                this.columnFlipchartQuantity = base.Columns["FlipchartQuantity"];
                this.columnInternet = base.Columns["Internet"];
                this.columnMinimumBandwith = base.Columns["MinimumBandwith"];
                this.columnRentedComputers = base.Columns["RentedComputers"];
                this.columnRentedComputerQuantity = base.Columns["RentedComputerQuantity"];
                this.columnComputerSpecifications = base.Columns["ComputerSpecifications"];
                this.columnMicrophoneAmplification = base.Columns["MicrophoneAmplification"];
                this.columnMicrophoneSpecifications = base.Columns["MicrophoneSpecifications"];
                this.columnSimultaneusTranslation = base.Columns["SimultaneusTranslation"];
                this.columnLanguage = base.Columns["Language"];
                this.columnOtherResources = base.Columns["OtherResources"];
                this.columnNumberPassengers = base.Columns["NumberPassengers"];
                this.columnOrigin = base.Columns["Origin"];
                this.columnDestination = base.Columns["Destination"];
                this.columnNumberRooms = base.Columns["NumberRooms"];
                this.columnBreakfast = base.Columns["Breakfast"];
                this.columnCoffeBreakAM = base.Columns["CoffeBreakAM"];
                this.columnLunch = base.Columns["Lunch"];
                this.columnCoffeBreakPM = base.Columns["CoffeBreakPM"];
                this.columnDinner = base.Columns["Dinner"];
                this.columnActive = base.Columns["Active"];
                this.columnAccommodationType = base.Columns["AccommodationType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdEvent = new global::System.Data.DataColumn("IdEvent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdEvent);
                this.columnIdRequest = new global::System.Data.DataColumn("IdRequest", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdRequest);
                this.columnIdAccommodationType = new global::System.Data.DataColumn("IdAccommodationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdAccommodationType);
                this.columnEventName = new global::System.Data.DataColumn("EventName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventName);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnNumberParticipants = new global::System.Data.DataColumn("NumberParticipants", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberParticipants);
                this.columnVideoBeam = new global::System.Data.DataColumn("VideoBeam", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoBeam);
                this.columnFlipchart = new global::System.Data.DataColumn("Flipchart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlipchart);
                this.columnFlipchartQuantity = new global::System.Data.DataColumn("FlipchartQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlipchartQuantity);
                this.columnInternet = new global::System.Data.DataColumn("Internet", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternet);
                this.columnMinimumBandwith = new global::System.Data.DataColumn("MinimumBandwith", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumBandwith);
                this.columnRentedComputers = new global::System.Data.DataColumn("RentedComputers", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentedComputers);
                this.columnRentedComputerQuantity = new global::System.Data.DataColumn("RentedComputerQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentedComputerQuantity);
                this.columnComputerSpecifications = new global::System.Data.DataColumn("ComputerSpecifications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputerSpecifications);
                this.columnMicrophoneAmplification = new global::System.Data.DataColumn("MicrophoneAmplification", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMicrophoneAmplification);
                this.columnMicrophoneSpecifications = new global::System.Data.DataColumn("MicrophoneSpecifications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMicrophoneSpecifications);
                this.columnSimultaneusTranslation = new global::System.Data.DataColumn("SimultaneusTranslation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimultaneusTranslation);
                this.columnLanguage = new global::System.Data.DataColumn("Language", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLanguage);
                this.columnOtherResources = new global::System.Data.DataColumn("OtherResources", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherResources);
                this.columnNumberPassengers = new global::System.Data.DataColumn("NumberPassengers", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberPassengers);
                this.columnOrigin = new global::System.Data.DataColumn("Origin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrigin);
                this.columnDestination = new global::System.Data.DataColumn("Destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestination);
                this.columnNumberRooms = new global::System.Data.DataColumn("NumberRooms", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberRooms);
                this.columnBreakfast = new global::System.Data.DataColumn("Breakfast", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreakfast);
                this.columnCoffeBreakAM = new global::System.Data.DataColumn("CoffeBreakAM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoffeBreakAM);
                this.columnLunch = new global::System.Data.DataColumn("Lunch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLunch);
                this.columnCoffeBreakPM = new global::System.Data.DataColumn("CoffeBreakPM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoffeBreakPM);
                this.columnDinner = new global::System.Data.DataColumn("Dinner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDinner);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnAccommodationType = new global::System.Data.DataColumn("AccommodationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccommodationType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdEvent}, true));
                this.columnIdEvent.AutoIncrement = true;
                this.columnIdEvent.AutoIncrementSeed = -1;
                this.columnIdEvent.AutoIncrementStep = -1;
                this.columnIdEvent.AllowDBNull = false;
                this.columnIdEvent.ReadOnly = true;
                this.columnIdEvent.Unique = true;
                this.columnIdRequest.AllowDBNull = false;
                this.columnEventName.AllowDBNull = false;
                this.columnEventName.MaxLength = 250;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnStartTime.AllowDBNull = false;
                this.columnEndTime.AllowDBNull = false;
                this.columnNumberParticipants.AllowDBNull = false;
                this.columnVideoBeam.AllowDBNull = false;
                this.columnFlipchart.AllowDBNull = false;
                this.columnFlipchartQuantity.AllowDBNull = false;
                this.columnInternet.AllowDBNull = false;
                this.columnMinimumBandwith.AllowDBNull = false;
                this.columnRentedComputers.AllowDBNull = false;
                this.columnRentedComputerQuantity.AllowDBNull = false;
                this.columnComputerSpecifications.AllowDBNull = false;
                this.columnComputerSpecifications.MaxLength = 250;
                this.columnMicrophoneAmplification.AllowDBNull = false;
                this.columnMicrophoneSpecifications.AllowDBNull = false;
                this.columnMicrophoneSpecifications.MaxLength = 250;
                this.columnSimultaneusTranslation.AllowDBNull = false;
                this.columnLanguage.AllowDBNull = false;
                this.columnLanguage.MaxLength = 50;
                this.columnOtherResources.AllowDBNull = false;
                this.columnOtherResources.MaxLength = 1024;
                this.columnNumberPassengers.AllowDBNull = false;
                this.columnOrigin.AllowDBNull = false;
                this.columnOrigin.MaxLength = 50;
                this.columnDestination.AllowDBNull = false;
                this.columnDestination.MaxLength = 50;
                this.columnNumberRooms.AllowDBNull = false;
                this.columnBreakfast.AllowDBNull = false;
                this.columnCoffeBreakAM.AllowDBNull = false;
                this.columnLunch.AllowDBNull = false;
                this.columnCoffeBreakPM.AllowDBNull = false;
                this.columnDinner.AllowDBNull = false;
                this.columnActive.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow NewEventsRow() {
                return ((EventsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EventsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EventsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EventsRowChanged != null)) {
                    this.EventsRowChanged(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EventsRowChanging != null)) {
                    this.EventsRowChanging(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EventsRowDeleted != null)) {
                    this.EventsRowDeleted(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EventsRowDeleting != null)) {
                    this.EventsRowDeleting(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEventsRow(EventsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSRequest ds = new DSRequest();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EventsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GoodsDataTable : global::System.Data.TypedTableBase<GoodsRow> {
            
            private global::System.Data.DataColumn columnIdGoods;
            
            private global::System.Data.DataColumn columnIdRequest;
            
            private global::System.Data.DataColumn columnIdUnitMeasure;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnManufacturerBrand;
            
            private global::System.Data.DataColumn columnModel;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnDimensions;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnCapacity;
            
            private global::System.Data.DataColumn columnPower;
            
            private global::System.Data.DataColumn columnOther;
            
            private global::System.Data.DataColumn columnPlaceDelivery;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            private global::System.Data.DataColumn columnExpectedDeliveryDate;
            
            private global::System.Data.DataColumn columnObservations;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnUnitMeasure;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsDataTable() {
                this.TableName = "Goods";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GoodsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GoodsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdGoodsColumn {
                get {
                    return this.columnIdGoods;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdRequestColumn {
                get {
                    return this.columnIdRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUnitMeasureColumn {
                get {
                    return this.columnIdUnitMeasure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManufacturerBrandColumn {
                get {
                    return this.columnManufacturerBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DimensionsColumn {
                get {
                    return this.columnDimensions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CapacityColumn {
                get {
                    return this.columnCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerColumn {
                get {
                    return this.columnPower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherColumn {
                get {
                    return this.columnOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaceDeliveryColumn {
                get {
                    return this.columnPlaceDelivery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpectedDeliveryDateColumn {
                get {
                    return this.columnExpectedDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObservationsColumn {
                get {
                    return this.columnObservations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitMeasureColumn {
                get {
                    return this.columnUnitMeasure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsRow this[int index] {
                get {
                    return ((GoodsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GoodsRowChangeEventHandler GoodsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GoodsRowChangeEventHandler GoodsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GoodsRowChangeEventHandler GoodsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GoodsRowChangeEventHandler GoodsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGoodsRow(GoodsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsRow AddGoodsRow(
                        RequestRow parentRequestRowByGoods, 
                        int IdUnitMeasure, 
                        double Quantity, 
                        string Description, 
                        string ManufacturerBrand, 
                        string Model, 
                        string Reference, 
                        string Dimensions, 
                        string Color, 
                        string Capacity, 
                        string Power, 
                        string Other, 
                        string PlaceDelivery, 
                        string ContactPerson, 
                        System.DateTime ExpectedDeliveryDate, 
                        string Observations, 
                        bool Active, 
                        string UnitMeasure) {
                GoodsRow rowGoodsRow = ((GoodsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        IdUnitMeasure,
                        Quantity,
                        Description,
                        ManufacturerBrand,
                        Model,
                        Reference,
                        Dimensions,
                        Color,
                        Capacity,
                        Power,
                        Other,
                        PlaceDelivery,
                        ContactPerson,
                        ExpectedDeliveryDate,
                        Observations,
                        Active,
                        UnitMeasure};
                if ((parentRequestRowByGoods != null)) {
                    columnValuesArray[1] = parentRequestRowByGoods[0];
                }
                rowGoodsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGoodsRow);
                return rowGoodsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsRow FindByIdGoods(int IdGoods) {
                return ((GoodsRow)(this.Rows.Find(new object[] {
                            IdGoods})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GoodsDataTable cln = ((GoodsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GoodsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdGoods = base.Columns["IdGoods"];
                this.columnIdRequest = base.Columns["IdRequest"];
                this.columnIdUnitMeasure = base.Columns["IdUnitMeasure"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnDescription = base.Columns["Description"];
                this.columnManufacturerBrand = base.Columns["ManufacturerBrand"];
                this.columnModel = base.Columns["Model"];
                this.columnReference = base.Columns["Reference"];
                this.columnDimensions = base.Columns["Dimensions"];
                this.columnColor = base.Columns["Color"];
                this.columnCapacity = base.Columns["Capacity"];
                this.columnPower = base.Columns["Power"];
                this.columnOther = base.Columns["Other"];
                this.columnPlaceDelivery = base.Columns["PlaceDelivery"];
                this.columnContactPerson = base.Columns["ContactPerson"];
                this.columnExpectedDeliveryDate = base.Columns["ExpectedDeliveryDate"];
                this.columnObservations = base.Columns["Observations"];
                this.columnActive = base.Columns["Active"];
                this.columnUnitMeasure = base.Columns["UnitMeasure"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdGoods = new global::System.Data.DataColumn("IdGoods", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdGoods);
                this.columnIdRequest = new global::System.Data.DataColumn("IdRequest", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdRequest);
                this.columnIdUnitMeasure = new global::System.Data.DataColumn("IdUnitMeasure", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUnitMeasure);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnManufacturerBrand = new global::System.Data.DataColumn("ManufacturerBrand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturerBrand);
                this.columnModel = new global::System.Data.DataColumn("Model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnDimensions = new global::System.Data.DataColumn("Dimensions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimensions);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnCapacity = new global::System.Data.DataColumn("Capacity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapacity);
                this.columnPower = new global::System.Data.DataColumn("Power", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnOther = new global::System.Data.DataColumn("Other", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther);
                this.columnPlaceDelivery = new global::System.Data.DataColumn("PlaceDelivery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceDelivery);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.columnExpectedDeliveryDate = new global::System.Data.DataColumn("ExpectedDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpectedDeliveryDate);
                this.columnObservations = new global::System.Data.DataColumn("Observations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservations);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnUnitMeasure = new global::System.Data.DataColumn("UnitMeasure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitMeasure);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdGoods}, true));
                this.columnIdGoods.AutoIncrement = true;
                this.columnIdGoods.AutoIncrementSeed = -1;
                this.columnIdGoods.AutoIncrementStep = -1;
                this.columnIdGoods.AllowDBNull = false;
                this.columnIdGoods.ReadOnly = true;
                this.columnIdGoods.Unique = true;
                this.columnIdRequest.AllowDBNull = false;
                this.columnQuantity.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnManufacturerBrand.AllowDBNull = false;
                this.columnManufacturerBrand.MaxLength = 250;
                this.columnModel.AllowDBNull = false;
                this.columnModel.MaxLength = 150;
                this.columnReference.AllowDBNull = false;
                this.columnReference.MaxLength = 150;
                this.columnDimensions.AllowDBNull = false;
                this.columnDimensions.MaxLength = 150;
                this.columnColor.AllowDBNull = false;
                this.columnColor.MaxLength = 150;
                this.columnCapacity.AllowDBNull = false;
                this.columnCapacity.MaxLength = 150;
                this.columnPower.AllowDBNull = false;
                this.columnPower.MaxLength = 150;
                this.columnOther.AllowDBNull = false;
                this.columnOther.MaxLength = 150;
                this.columnPlaceDelivery.AllowDBNull = false;
                this.columnPlaceDelivery.MaxLength = 250;
                this.columnContactPerson.AllowDBNull = false;
                this.columnContactPerson.MaxLength = 250;
                this.columnExpectedDeliveryDate.AllowDBNull = false;
                this.columnObservations.AllowDBNull = false;
                this.columnObservations.MaxLength = 4000;
                this.columnActive.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsRow NewGoodsRow() {
                return ((GoodsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GoodsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GoodsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GoodsRowChanged != null)) {
                    this.GoodsRowChanged(this, new GoodsRowChangeEvent(((GoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GoodsRowChanging != null)) {
                    this.GoodsRowChanging(this, new GoodsRowChangeEvent(((GoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GoodsRowDeleted != null)) {
                    this.GoodsRowDeleted(this, new GoodsRowChangeEvent(((GoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GoodsRowDeleting != null)) {
                    this.GoodsRowDeleting(this, new GoodsRowChangeEvent(((GoodsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGoodsRow(GoodsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSRequest ds = new DSRequest();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GoodsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RequestDataTable : global::System.Data.TypedTableBase<RequestRow> {
            
            private global::System.Data.DataColumn columnIdRequest;
            
            private global::System.Data.DataColumn columnIdRequestUnit;
            
            private global::System.Data.DataColumn columnRequesterPerson;
            
            private global::System.Data.DataColumn columnDutyStation;
            
            private global::System.Data.DataColumn columnRequestDate;
            
            private global::System.Data.DataColumn columnResponsible;
            
            private global::System.Data.DataColumn columnBackgroundRationale;
            
            private global::System.Data.DataColumn columnDeliveryLocation;
            
            private global::System.Data.DataColumn columnEstimatedDeliveryDate;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnRequestUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestDataTable() {
                this.TableName = "Request";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RequestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RequestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdRequestColumn {
                get {
                    return this.columnIdRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdRequestUnitColumn {
                get {
                    return this.columnIdRequestUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequesterPersonColumn {
                get {
                    return this.columnRequesterPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DutyStationColumn {
                get {
                    return this.columnDutyStation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponsibleColumn {
                get {
                    return this.columnResponsible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackgroundRationaleColumn {
                get {
                    return this.columnBackgroundRationale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryLocationColumn {
                get {
                    return this.columnDeliveryLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimatedDeliveryDateColumn {
                get {
                    return this.columnEstimatedDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestUnitColumn {
                get {
                    return this.columnRequestUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow this[int index] {
                get {
                    return ((RequestRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RequestRowChangeEventHandler RequestRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RequestRowChangeEventHandler RequestRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RequestRowChangeEventHandler RequestRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RequestRowChangeEventHandler RequestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRequestRow(RequestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow AddRequestRow(int IdRequestUnit, string RequesterPerson, string DutyStation, System.DateTime RequestDate, string Responsible, string BackgroundRationale, string DeliveryLocation, System.DateTime EstimatedDeliveryDate, bool Active, string RequestUnit) {
                RequestRow rowRequestRow = ((RequestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        IdRequestUnit,
                        RequesterPerson,
                        DutyStation,
                        RequestDate,
                        Responsible,
                        BackgroundRationale,
                        DeliveryLocation,
                        EstimatedDeliveryDate,
                        Active,
                        RequestUnit};
                rowRequestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRequestRow);
                return rowRequestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow FindByIdRequest(int IdRequest) {
                return ((RequestRow)(this.Rows.Find(new object[] {
                            IdRequest})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RequestDataTable cln = ((RequestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RequestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdRequest = base.Columns["IdRequest"];
                this.columnIdRequestUnit = base.Columns["IdRequestUnit"];
                this.columnRequesterPerson = base.Columns["RequesterPerson"];
                this.columnDutyStation = base.Columns["DutyStation"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnResponsible = base.Columns["Responsible"];
                this.columnBackgroundRationale = base.Columns["BackgroundRationale"];
                this.columnDeliveryLocation = base.Columns["DeliveryLocation"];
                this.columnEstimatedDeliveryDate = base.Columns["EstimatedDeliveryDate"];
                this.columnActive = base.Columns["Active"];
                this.columnRequestUnit = base.Columns["RequestUnit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdRequest = new global::System.Data.DataColumn("IdRequest", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdRequest);
                this.columnIdRequestUnit = new global::System.Data.DataColumn("IdRequestUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdRequestUnit);
                this.columnRequesterPerson = new global::System.Data.DataColumn("RequesterPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequesterPerson);
                this.columnDutyStation = new global::System.Data.DataColumn("DutyStation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyStation);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnResponsible = new global::System.Data.DataColumn("Responsible", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsible);
                this.columnBackgroundRationale = new global::System.Data.DataColumn("BackgroundRationale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackgroundRationale);
                this.columnDeliveryLocation = new global::System.Data.DataColumn("DeliveryLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryLocation);
                this.columnEstimatedDeliveryDate = new global::System.Data.DataColumn("EstimatedDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimatedDeliveryDate);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnRequestUnit = new global::System.Data.DataColumn("RequestUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestUnit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdRequest}, true));
                this.columnIdRequest.AutoIncrement = true;
                this.columnIdRequest.AutoIncrementSeed = -1;
                this.columnIdRequest.AutoIncrementStep = -1;
                this.columnIdRequest.AllowDBNull = false;
                this.columnIdRequest.ReadOnly = true;
                this.columnIdRequest.Unique = true;
                this.columnIdRequestUnit.AllowDBNull = false;
                this.columnRequesterPerson.AllowDBNull = false;
                this.columnRequesterPerson.MaxLength = 150;
                this.columnDutyStation.AllowDBNull = false;
                this.columnDutyStation.MaxLength = 75;
                this.columnRequestDate.AllowDBNull = false;
                this.columnResponsible.AllowDBNull = false;
                this.columnResponsible.MaxLength = 150;
                this.columnBackgroundRationale.AllowDBNull = false;
                this.columnBackgroundRationale.MaxLength = 4000;
                this.columnDeliveryLocation.AllowDBNull = false;
                this.columnDeliveryLocation.MaxLength = 100;
                this.columnEstimatedDeliveryDate.AllowDBNull = false;
                this.columnActive.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow NewRequestRow() {
                return ((RequestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RequestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RequestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RequestRowChanged != null)) {
                    this.RequestRowChanged(this, new RequestRowChangeEvent(((RequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RequestRowChanging != null)) {
                    this.RequestRowChanging(this, new RequestRowChangeEvent(((RequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RequestRowDeleted != null)) {
                    this.RequestRowDeleted(this, new RequestRowChangeEvent(((RequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RequestRowDeleting != null)) {
                    this.RequestRowDeleting(this, new RequestRowChangeEvent(((RequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRequestRow(RequestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSRequest ds = new DSRequest();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RequestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServicesDataTable : global::System.Data.TypedTableBase<ServicesRow> {
            
            private global::System.Data.DataColumn columnIdService;
            
            private global::System.Data.DataColumn columnIdServiceType;
            
            private global::System.Data.DataColumn columnIdRequest;
            
            private global::System.Data.DataColumn columnContext;
            
            private global::System.Data.DataColumn columnNumberDays;
            
            private global::System.Data.DataColumn columnHoursDay;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnServiceLocation;
            
            private global::System.Data.DataColumn columnSpecifications;
            
            private global::System.Data.DataColumn columnServiceResult;
            
            private global::System.Data.DataColumn columnExpectedDeliveryDate;
            
            private global::System.Data.DataColumn columnPriorDeliveryDate;
            
            private global::System.Data.DataColumn columnDeliveryPlace;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            private global::System.Data.DataColumn columnAlternativeDeliveryDate;
            
            private global::System.Data.DataColumn columnObservations;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnServiceType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesDataTable() {
                this.TableName = "Services";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ServicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdServiceColumn {
                get {
                    return this.columnIdService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdServiceTypeColumn {
                get {
                    return this.columnIdServiceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdRequestColumn {
                get {
                    return this.columnIdRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContextColumn {
                get {
                    return this.columnContext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberDaysColumn {
                get {
                    return this.columnNumberDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoursDayColumn {
                get {
                    return this.columnHoursDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceLocationColumn {
                get {
                    return this.columnServiceLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecificationsColumn {
                get {
                    return this.columnSpecifications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceResultColumn {
                get {
                    return this.columnServiceResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpectedDeliveryDateColumn {
                get {
                    return this.columnExpectedDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriorDeliveryDateColumn {
                get {
                    return this.columnPriorDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryPlaceColumn {
                get {
                    return this.columnDeliveryPlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeDeliveryDateColumn {
                get {
                    return this.columnAlternativeDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObservationsColumn {
                get {
                    return this.columnObservations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceTypeColumn {
                get {
                    return this.columnServiceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow this[int index] {
                get {
                    return ((ServicesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddServicesRow(ServicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow AddServicesRow(
                        int IdServiceType, 
                        RequestRow parentRequestRowByServices, 
                        string Context, 
                        int NumberDays, 
                        int HoursDay, 
                        string Description, 
                        string ServiceLocation, 
                        string Specifications, 
                        string ServiceResult, 
                        System.DateTime ExpectedDeliveryDate, 
                        System.DateTime PriorDeliveryDate, 
                        string DeliveryPlace, 
                        string ContactPerson, 
                        System.DateTime AlternativeDeliveryDate, 
                        string Observations, 
                        bool Active, 
                        string ServiceType) {
                ServicesRow rowServicesRow = ((ServicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        IdServiceType,
                        null,
                        Context,
                        NumberDays,
                        HoursDay,
                        Description,
                        ServiceLocation,
                        Specifications,
                        ServiceResult,
                        ExpectedDeliveryDate,
                        PriorDeliveryDate,
                        DeliveryPlace,
                        ContactPerson,
                        AlternativeDeliveryDate,
                        Observations,
                        Active,
                        ServiceType};
                if ((parentRequestRowByServices != null)) {
                    columnValuesArray[2] = parentRequestRowByServices[0];
                }
                rowServicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServicesRow);
                return rowServicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow FindByIdService(int IdService) {
                return ((ServicesRow)(this.Rows.Find(new object[] {
                            IdService})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ServicesDataTable cln = ((ServicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdService = base.Columns["IdService"];
                this.columnIdServiceType = base.Columns["IdServiceType"];
                this.columnIdRequest = base.Columns["IdRequest"];
                this.columnContext = base.Columns["Context"];
                this.columnNumberDays = base.Columns["NumberDays"];
                this.columnHoursDay = base.Columns["HoursDay"];
                this.columnDescription = base.Columns["Description"];
                this.columnServiceLocation = base.Columns["ServiceLocation"];
                this.columnSpecifications = base.Columns["Specifications"];
                this.columnServiceResult = base.Columns["ServiceResult"];
                this.columnExpectedDeliveryDate = base.Columns["ExpectedDeliveryDate"];
                this.columnPriorDeliveryDate = base.Columns["PriorDeliveryDate"];
                this.columnDeliveryPlace = base.Columns["DeliveryPlace"];
                this.columnContactPerson = base.Columns["ContactPerson"];
                this.columnAlternativeDeliveryDate = base.Columns["AlternativeDeliveryDate"];
                this.columnObservations = base.Columns["Observations"];
                this.columnActive = base.Columns["Active"];
                this.columnServiceType = base.Columns["ServiceType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdService = new global::System.Data.DataColumn("IdService", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdService);
                this.columnIdServiceType = new global::System.Data.DataColumn("IdServiceType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdServiceType);
                this.columnIdRequest = new global::System.Data.DataColumn("IdRequest", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdRequest);
                this.columnContext = new global::System.Data.DataColumn("Context", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContext);
                this.columnNumberDays = new global::System.Data.DataColumn("NumberDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberDays);
                this.columnHoursDay = new global::System.Data.DataColumn("HoursDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursDay);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnServiceLocation = new global::System.Data.DataColumn("ServiceLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceLocation);
                this.columnSpecifications = new global::System.Data.DataColumn("Specifications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecifications);
                this.columnServiceResult = new global::System.Data.DataColumn("ServiceResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceResult);
                this.columnExpectedDeliveryDate = new global::System.Data.DataColumn("ExpectedDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpectedDeliveryDate);
                this.columnPriorDeliveryDate = new global::System.Data.DataColumn("PriorDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorDeliveryDate);
                this.columnDeliveryPlace = new global::System.Data.DataColumn("DeliveryPlace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryPlace);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.columnAlternativeDeliveryDate = new global::System.Data.DataColumn("AlternativeDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeDeliveryDate);
                this.columnObservations = new global::System.Data.DataColumn("Observations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservations);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnServiceType = new global::System.Data.DataColumn("ServiceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdService}, true));
                this.columnIdService.AutoIncrement = true;
                this.columnIdService.AutoIncrementSeed = -1;
                this.columnIdService.AutoIncrementStep = -1;
                this.columnIdService.AllowDBNull = false;
                this.columnIdService.ReadOnly = true;
                this.columnIdService.Unique = true;
                this.columnIdServiceType.AllowDBNull = false;
                this.columnIdRequest.AllowDBNull = false;
                this.columnContext.AllowDBNull = false;
                this.columnContext.MaxLength = 500;
                this.columnNumberDays.AllowDBNull = false;
                this.columnHoursDay.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnServiceLocation.AllowDBNull = false;
                this.columnServiceLocation.MaxLength = 250;
                this.columnSpecifications.AllowDBNull = false;
                this.columnSpecifications.MaxLength = 4000;
                this.columnServiceResult.AllowDBNull = false;
                this.columnServiceResult.MaxLength = 4000;
                this.columnExpectedDeliveryDate.AllowDBNull = false;
                this.columnPriorDeliveryDate.AllowDBNull = false;
                this.columnDeliveryPlace.AllowDBNull = false;
                this.columnDeliveryPlace.MaxLength = 250;
                this.columnContactPerson.AllowDBNull = false;
                this.columnContactPerson.MaxLength = 250;
                this.columnAlternativeDeliveryDate.AllowDBNull = false;
                this.columnObservations.AllowDBNull = false;
                this.columnObservations.MaxLength = 500;
                this.columnActive.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow NewServicesRow() {
                return ((ServicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ServicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServicesRowChanged != null)) {
                    this.ServicesRowChanged(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServicesRowChanging != null)) {
                    this.ServicesRowChanging(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServicesRowDeleted != null)) {
                    this.ServicesRowDeleted(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServicesRowDeleting != null)) {
                    this.ServicesRowDeleting(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveServicesRow(ServicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSRequest ds = new DSRequest();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EventsRow : global::System.Data.DataRow {
            
            private EventsDataTable tableEvents;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EventsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEvents = ((EventsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdEvent {
                get {
                    return ((int)(this[this.tableEvents.IdEventColumn]));
                }
                set {
                    this[this.tableEvents.IdEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdRequest {
                get {
                    return ((int)(this[this.tableEvents.IdRequestColumn]));
                }
                set {
                    this[this.tableEvents.IdRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdAccommodationType {
                get {
                    try {
                        return ((int)(this[this.tableEvents.IdAccommodationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IdAccommodationType\' de la tabla \'Events\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.IdAccommodationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EventName {
                get {
                    return ((string)(this[this.tableEvents.EventNameColumn]));
                }
                set {
                    this[this.tableEvents.EventNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableEvents.StartDateColumn]));
                }
                set {
                    this[this.tableEvents.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EndDate {
                get {
                    return ((global::System.DateTime)(this[this.tableEvents.EndDateColumn]));
                }
                set {
                    this[this.tableEvents.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan StartTime {
                get {
                    return ((global::System.TimeSpan)(this[this.tableEvents.StartTimeColumn]));
                }
                set {
                    this[this.tableEvents.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan EndTime {
                get {
                    return ((global::System.TimeSpan)(this[this.tableEvents.EndTimeColumn]));
                }
                set {
                    this[this.tableEvents.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberParticipants {
                get {
                    return ((int)(this[this.tableEvents.NumberParticipantsColumn]));
                }
                set {
                    this[this.tableEvents.NumberParticipantsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VideoBeam {
                get {
                    return ((bool)(this[this.tableEvents.VideoBeamColumn]));
                }
                set {
                    this[this.tableEvents.VideoBeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Flipchart {
                get {
                    return ((bool)(this[this.tableEvents.FlipchartColumn]));
                }
                set {
                    this[this.tableEvents.FlipchartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FlipchartQuantity {
                get {
                    return ((int)(this[this.tableEvents.FlipchartQuantityColumn]));
                }
                set {
                    this[this.tableEvents.FlipchartQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Internet {
                get {
                    return ((bool)(this[this.tableEvents.InternetColumn]));
                }
                set {
                    this[this.tableEvents.InternetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MinimumBandwith {
                get {
                    return ((int)(this[this.tableEvents.MinimumBandwithColumn]));
                }
                set {
                    this[this.tableEvents.MinimumBandwithColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RentedComputers {
                get {
                    return ((bool)(this[this.tableEvents.RentedComputersColumn]));
                }
                set {
                    this[this.tableEvents.RentedComputersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RentedComputerQuantity {
                get {
                    return ((int)(this[this.tableEvents.RentedComputerQuantityColumn]));
                }
                set {
                    this[this.tableEvents.RentedComputerQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ComputerSpecifications {
                get {
                    return ((string)(this[this.tableEvents.ComputerSpecificationsColumn]));
                }
                set {
                    this[this.tableEvents.ComputerSpecificationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MicrophoneAmplification {
                get {
                    return ((bool)(this[this.tableEvents.MicrophoneAmplificationColumn]));
                }
                set {
                    this[this.tableEvents.MicrophoneAmplificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MicrophoneSpecifications {
                get {
                    return ((string)(this[this.tableEvents.MicrophoneSpecificationsColumn]));
                }
                set {
                    this[this.tableEvents.MicrophoneSpecificationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SimultaneusTranslation {
                get {
                    return ((bool)(this[this.tableEvents.SimultaneusTranslationColumn]));
                }
                set {
                    this[this.tableEvents.SimultaneusTranslationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Language {
                get {
                    return ((string)(this[this.tableEvents.LanguageColumn]));
                }
                set {
                    this[this.tableEvents.LanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherResources {
                get {
                    return ((string)(this[this.tableEvents.OtherResourcesColumn]));
                }
                set {
                    this[this.tableEvents.OtherResourcesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberPassengers {
                get {
                    return ((int)(this[this.tableEvents.NumberPassengersColumn]));
                }
                set {
                    this[this.tableEvents.NumberPassengersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Origin {
                get {
                    return ((string)(this[this.tableEvents.OriginColumn]));
                }
                set {
                    this[this.tableEvents.OriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Destination {
                get {
                    return ((string)(this[this.tableEvents.DestinationColumn]));
                }
                set {
                    this[this.tableEvents.DestinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberRooms {
                get {
                    return ((int)(this[this.tableEvents.NumberRoomsColumn]));
                }
                set {
                    this[this.tableEvents.NumberRoomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Breakfast {
                get {
                    return ((bool)(this[this.tableEvents.BreakfastColumn]));
                }
                set {
                    this[this.tableEvents.BreakfastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CoffeBreakAM {
                get {
                    return ((bool)(this[this.tableEvents.CoffeBreakAMColumn]));
                }
                set {
                    this[this.tableEvents.CoffeBreakAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Lunch {
                get {
                    return ((bool)(this[this.tableEvents.LunchColumn]));
                }
                set {
                    this[this.tableEvents.LunchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CoffeBreakPM {
                get {
                    return ((bool)(this[this.tableEvents.CoffeBreakPMColumn]));
                }
                set {
                    this[this.tableEvents.CoffeBreakPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Dinner {
                get {
                    return ((bool)(this[this.tableEvents.DinnerColumn]));
                }
                set {
                    this[this.tableEvents.DinnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableEvents.ActiveColumn]));
                }
                set {
                    this[this.tableEvents.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccommodationType {
                get {
                    try {
                        return ((string)(this[this.tableEvents.AccommodationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AccommodationType\' de la tabla \'Events\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.AccommodationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow RequestRow {
                get {
                    return ((RequestRow)(this.GetParentRow(this.Table.ParentRelations["Events"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Events"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdAccommodationTypeNull() {
                return this.IsNull(this.tableEvents.IdAccommodationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdAccommodationTypeNull() {
                this[this.tableEvents.IdAccommodationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccommodationTypeNull() {
                return this.IsNull(this.tableEvents.AccommodationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccommodationTypeNull() {
                this[this.tableEvents.AccommodationTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GoodsRow : global::System.Data.DataRow {
            
            private GoodsDataTable tableGoods;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GoodsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGoods = ((GoodsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdGoods {
                get {
                    return ((int)(this[this.tableGoods.IdGoodsColumn]));
                }
                set {
                    this[this.tableGoods.IdGoodsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdRequest {
                get {
                    return ((int)(this[this.tableGoods.IdRequestColumn]));
                }
                set {
                    this[this.tableGoods.IdRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUnitMeasure {
                get {
                    try {
                        return ((int)(this[this.tableGoods.IdUnitMeasureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IdUnitMeasure\' de la tabla \'Goods\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoods.IdUnitMeasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Quantity {
                get {
                    return ((double)(this[this.tableGoods.QuantityColumn]));
                }
                set {
                    this[this.tableGoods.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableGoods.DescriptionColumn]));
                }
                set {
                    this[this.tableGoods.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManufacturerBrand {
                get {
                    return ((string)(this[this.tableGoods.ManufacturerBrandColumn]));
                }
                set {
                    this[this.tableGoods.ManufacturerBrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Model {
                get {
                    return ((string)(this[this.tableGoods.ModelColumn]));
                }
                set {
                    this[this.tableGoods.ModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Reference {
                get {
                    return ((string)(this[this.tableGoods.ReferenceColumn]));
                }
                set {
                    this[this.tableGoods.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Dimensions {
                get {
                    return ((string)(this[this.tableGoods.DimensionsColumn]));
                }
                set {
                    this[this.tableGoods.DimensionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Color {
                get {
                    return ((string)(this[this.tableGoods.ColorColumn]));
                }
                set {
                    this[this.tableGoods.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Capacity {
                get {
                    return ((string)(this[this.tableGoods.CapacityColumn]));
                }
                set {
                    this[this.tableGoods.CapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power {
                get {
                    return ((string)(this[this.tableGoods.PowerColumn]));
                }
                set {
                    this[this.tableGoods.PowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Other {
                get {
                    return ((string)(this[this.tableGoods.OtherColumn]));
                }
                set {
                    this[this.tableGoods.OtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlaceDelivery {
                get {
                    return ((string)(this[this.tableGoods.PlaceDeliveryColumn]));
                }
                set {
                    this[this.tableGoods.PlaceDeliveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPerson {
                get {
                    return ((string)(this[this.tableGoods.ContactPersonColumn]));
                }
                set {
                    this[this.tableGoods.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpectedDeliveryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableGoods.ExpectedDeliveryDateColumn]));
                }
                set {
                    this[this.tableGoods.ExpectedDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Observations {
                get {
                    return ((string)(this[this.tableGoods.ObservationsColumn]));
                }
                set {
                    this[this.tableGoods.ObservationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableGoods.ActiveColumn]));
                }
                set {
                    this[this.tableGoods.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitMeasure {
                get {
                    try {
                        return ((string)(this[this.tableGoods.UnitMeasureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UnitMeasure\' de la tabla \'Goods\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoods.UnitMeasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow RequestRow {
                get {
                    return ((RequestRow)(this.GetParentRow(this.Table.ParentRelations["Goods"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Goods"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUnitMeasureNull() {
                return this.IsNull(this.tableGoods.IdUnitMeasureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUnitMeasureNull() {
                this[this.tableGoods.IdUnitMeasureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitMeasureNull() {
                return this.IsNull(this.tableGoods.UnitMeasureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitMeasureNull() {
                this[this.tableGoods.UnitMeasureColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RequestRow : global::System.Data.DataRow {
            
            private RequestDataTable tableRequest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RequestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRequest = ((RequestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdRequest {
                get {
                    return ((int)(this[this.tableRequest.IdRequestColumn]));
                }
                set {
                    this[this.tableRequest.IdRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdRequestUnit {
                get {
                    return ((int)(this[this.tableRequest.IdRequestUnitColumn]));
                }
                set {
                    this[this.tableRequest.IdRequestUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequesterPerson {
                get {
                    return ((string)(this[this.tableRequest.RequesterPersonColumn]));
                }
                set {
                    this[this.tableRequest.RequesterPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DutyStation {
                get {
                    return ((string)(this[this.tableRequest.DutyStationColumn]));
                }
                set {
                    this[this.tableRequest.DutyStationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RequestDate {
                get {
                    return ((global::System.DateTime)(this[this.tableRequest.RequestDateColumn]));
                }
                set {
                    this[this.tableRequest.RequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Responsible {
                get {
                    return ((string)(this[this.tableRequest.ResponsibleColumn]));
                }
                set {
                    this[this.tableRequest.ResponsibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackgroundRationale {
                get {
                    return ((string)(this[this.tableRequest.BackgroundRationaleColumn]));
                }
                set {
                    this[this.tableRequest.BackgroundRationaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryLocation {
                get {
                    return ((string)(this[this.tableRequest.DeliveryLocationColumn]));
                }
                set {
                    this[this.tableRequest.DeliveryLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EstimatedDeliveryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableRequest.EstimatedDeliveryDateColumn]));
                }
                set {
                    this[this.tableRequest.EstimatedDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableRequest.ActiveColumn]));
                }
                set {
                    this[this.tableRequest.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequestUnit {
                get {
                    try {
                        return ((string)(this[this.tableRequest.RequestUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RequestUnit\' de la tabla \'Request\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequest.RequestUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequestUnitNull() {
                return this.IsNull(this.tableRequest.RequestUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequestUnitNull() {
                this[this.tableRequest.RequestUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow[] GetEventsRows() {
                if ((this.Table.ChildRelations["Events"] == null)) {
                    return new EventsRow[0];
                }
                else {
                    return ((EventsRow[])(base.GetChildRows(this.Table.ChildRelations["Events"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsRow[] GetGoodsRows() {
                if ((this.Table.ChildRelations["Goods"] == null)) {
                    return new GoodsRow[0];
                }
                else {
                    return ((GoodsRow[])(base.GetChildRows(this.Table.ChildRelations["Goods"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow[] GetServicesRows() {
                if ((this.Table.ChildRelations["Services"] == null)) {
                    return new ServicesRow[0];
                }
                else {
                    return ((ServicesRow[])(base.GetChildRows(this.Table.ChildRelations["Services"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ServicesRow : global::System.Data.DataRow {
            
            private ServicesDataTable tableServices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ServicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServices = ((ServicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdService {
                get {
                    return ((int)(this[this.tableServices.IdServiceColumn]));
                }
                set {
                    this[this.tableServices.IdServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdServiceType {
                get {
                    return ((int)(this[this.tableServices.IdServiceTypeColumn]));
                }
                set {
                    this[this.tableServices.IdServiceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdRequest {
                get {
                    return ((int)(this[this.tableServices.IdRequestColumn]));
                }
                set {
                    this[this.tableServices.IdRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Context {
                get {
                    return ((string)(this[this.tableServices.ContextColumn]));
                }
                set {
                    this[this.tableServices.ContextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberDays {
                get {
                    return ((int)(this[this.tableServices.NumberDaysColumn]));
                }
                set {
                    this[this.tableServices.NumberDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HoursDay {
                get {
                    return ((int)(this[this.tableServices.HoursDayColumn]));
                }
                set {
                    this[this.tableServices.HoursDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableServices.DescriptionColumn]));
                }
                set {
                    this[this.tableServices.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ServiceLocation {
                get {
                    return ((string)(this[this.tableServices.ServiceLocationColumn]));
                }
                set {
                    this[this.tableServices.ServiceLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Specifications {
                get {
                    return ((string)(this[this.tableServices.SpecificationsColumn]));
                }
                set {
                    this[this.tableServices.SpecificationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ServiceResult {
                get {
                    return ((string)(this[this.tableServices.ServiceResultColumn]));
                }
                set {
                    this[this.tableServices.ServiceResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpectedDeliveryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableServices.ExpectedDeliveryDateColumn]));
                }
                set {
                    this[this.tableServices.ExpectedDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PriorDeliveryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableServices.PriorDeliveryDateColumn]));
                }
                set {
                    this[this.tableServices.PriorDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryPlace {
                get {
                    return ((string)(this[this.tableServices.DeliveryPlaceColumn]));
                }
                set {
                    this[this.tableServices.DeliveryPlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPerson {
                get {
                    return ((string)(this[this.tableServices.ContactPersonColumn]));
                }
                set {
                    this[this.tableServices.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AlternativeDeliveryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableServices.AlternativeDeliveryDateColumn]));
                }
                set {
                    this[this.tableServices.AlternativeDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Observations {
                get {
                    return ((string)(this[this.tableServices.ObservationsColumn]));
                }
                set {
                    this[this.tableServices.ObservationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableServices.ActiveColumn]));
                }
                set {
                    this[this.tableServices.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ServiceType {
                get {
                    try {
                        return ((string)(this[this.tableServices.ServiceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ServiceType\' de la tabla \'Services\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableServices.ServiceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow RequestRow {
                get {
                    return ((RequestRow)(this.GetParentRow(this.Table.ParentRelations["Services"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Services"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceTypeNull() {
                return this.IsNull(this.tableServices.ServiceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceTypeNull() {
                this[this.tableServices.ServiceTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventsRowChangeEvent : global::System.EventArgs {
            
            private EventsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRowChangeEvent(EventsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GoodsRowChangeEvent : global::System.EventArgs {
            
            private GoodsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsRowChangeEvent(GoodsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GoodsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RequestRowChangeEvent : global::System.EventArgs {
            
            private RequestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRowChangeEvent(RequestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RequestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ServicesRowChangeEvent : global::System.EventArgs {
            
            private ServicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRowChangeEvent(ServicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WinApp.DataSets.DSRequestTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EventsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EventsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Events";
            tableMapping.ColumnMappings.Add("IdEvent", "IdEvent");
            tableMapping.ColumnMappings.Add("IdRequest", "IdRequest");
            tableMapping.ColumnMappings.Add("IdAccommodationType", "IdAccommodationType");
            tableMapping.ColumnMappings.Add("EventName", "EventName");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("EndDate", "EndDate");
            tableMapping.ColumnMappings.Add("StartTime", "StartTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("NumberParticipants", "NumberParticipants");
            tableMapping.ColumnMappings.Add("VideoBeam", "VideoBeam");
            tableMapping.ColumnMappings.Add("Flipchart", "Flipchart");
            tableMapping.ColumnMappings.Add("FlipchartQuantity", "FlipchartQuantity");
            tableMapping.ColumnMappings.Add("Internet", "Internet");
            tableMapping.ColumnMappings.Add("MinimumBandwith", "MinimumBandwith");
            tableMapping.ColumnMappings.Add("RentedComputers", "RentedComputers");
            tableMapping.ColumnMappings.Add("RentedComputerQuantity", "RentedComputerQuantity");
            tableMapping.ColumnMappings.Add("ComputerSpecifications", "ComputerSpecifications");
            tableMapping.ColumnMappings.Add("MicrophoneAmplification", "MicrophoneAmplification");
            tableMapping.ColumnMappings.Add("MicrophoneSpecifications", "MicrophoneSpecifications");
            tableMapping.ColumnMappings.Add("SimultaneusTranslation", "SimultaneusTranslation");
            tableMapping.ColumnMappings.Add("Language", "Language");
            tableMapping.ColumnMappings.Add("OtherResources", "OtherResources");
            tableMapping.ColumnMappings.Add("NumberPassengers", "NumberPassengers");
            tableMapping.ColumnMappings.Add("Origin", "Origin");
            tableMapping.ColumnMappings.Add("Destination", "Destination");
            tableMapping.ColumnMappings.Add("NumberRooms", "NumberRooms");
            tableMapping.ColumnMappings.Add("Breakfast", "Breakfast");
            tableMapping.ColumnMappings.Add("CoffeBreakAM", "CoffeBreakAM");
            tableMapping.ColumnMappings.Add("Lunch", "Lunch");
            tableMapping.ColumnMappings.Add("CoffeBreakPM", "CoffeBreakPM");
            tableMapping.ColumnMappings.Add("Dinner", "Dinner");
            tableMapping.ColumnMappings.Add("Active", "Active");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Purchase].[Events] WHERE (([IdEvent] = @Original_IdEvent) AND ([IdRe" +
                "quest] = @Original_IdRequest) AND ((@IsNull_IdAccommodationType = 1 AND [IdAccom" +
                "modationType] IS NULL) OR ([IdAccommodationType] = @Original_IdAccommodationType" +
                ")) AND ([EventName] = @Original_EventName) AND ([StartDate] = @Original_StartDat" +
                "e) AND ([EndDate] = @Original_EndDate) AND ([StartTime] = @Original_StartTime) A" +
                "ND ([EndTime] = @Original_EndTime) AND ([NumberParticipants] = @Original_NumberP" +
                "articipants) AND ([VideoBeam] = @Original_VideoBeam) AND ([Flipchart] = @Origina" +
                "l_Flipchart) AND ([FlipchartQuantity] = @Original_FlipchartQuantity) AND ([Inter" +
                "net] = @Original_Internet) AND ([MinimumBandwith] = @Original_MinimumBandwith) A" +
                "ND ([RentedComputers] = @Original_RentedComputers) AND ([RentedComputerQuantity]" +
                " = @Original_RentedComputerQuantity) AND ([ComputerSpecifications] = @Original_C" +
                "omputerSpecifications) AND ([MicrophoneAmplification] = @Original_MicrophoneAmpl" +
                "ification) AND ([MicrophoneSpecifications] = @Original_MicrophoneSpecifications)" +
                " AND ([SimultaneusTranslation] = @Original_SimultaneusTranslation) AND ([Languag" +
                "e] = @Original_Language) AND ([OtherResources] = @Original_OtherResources) AND (" +
                "[NumberPassengers] = @Original_NumberPassengers) AND ([Origin] = @Original_Origi" +
                "n) AND ([Destination] = @Original_Destination) AND ([NumberRooms] = @Original_Nu" +
                "mberRooms) AND ([Breakfast] = @Original_Breakfast) AND ([CoffeBreakAM] = @Origin" +
                "al_CoffeBreakAM) AND ([Lunch] = @Original_Lunch) AND ([CoffeBreakPM] = @Original" +
                "_CoffeBreakPM) AND ([Dinner] = @Original_Dinner) AND ([Active] = @Original_Activ" +
                "e))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdEvent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdEvent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IdAccommodationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdAccommodationType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdAccommodationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdAccommodationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EventName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EventName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberParticipants", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberParticipants", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VideoBeam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoBeam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flipchart", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flipchart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlipchartQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlipchartQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internet", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinimumBandwith", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumBandwith", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentedComputers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentedComputerQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputerQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComputerSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerSpecifications", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicrophoneAmplification", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneAmplification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicrophoneSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneSpecifications", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SimultaneusTranslation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimultaneusTranslation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Language", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Language", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherResources", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherResources", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberPassengers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberPassengers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Origin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Origin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Destination", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberRooms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberRooms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Breakfast", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Breakfast", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoffeBreakAM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lunch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lunch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoffeBreakPM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakPM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dinner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dinner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Purchase].[Events] ([IdRequest], [IdAccommodationType], [EventName]," +
                " [StartDate], [EndDate], [StartTime], [EndTime], [NumberParticipants], [VideoBea" +
                "m], [Flipchart], [FlipchartQuantity], [Internet], [MinimumBandwith], [RentedComp" +
                "uters], [RentedComputerQuantity], [ComputerSpecifications], [MicrophoneAmplifica" +
                "tion], [MicrophoneSpecifications], [SimultaneusTranslation], [Language], [OtherR" +
                "esources], [NumberPassengers], [Origin], [Destination], [NumberRooms], [Breakfas" +
                "t], [CoffeBreakAM], [Lunch], [CoffeBreakPM], [Dinner], [Active]) VALUES (@IdRequ" +
                "est, @IdAccommodationType, @EventName, @StartDate, @EndDate, @StartTime, @EndTim" +
                "e, @NumberParticipants, @VideoBeam, @Flipchart, @FlipchartQuantity, @Internet, @" +
                "MinimumBandwith, @RentedComputers, @RentedComputerQuantity, @ComputerSpecificati" +
                "ons, @MicrophoneAmplification, @MicrophoneSpecifications, @SimultaneusTranslatio" +
                "n, @Language, @OtherResources, @NumberPassengers, @Origin, @Destination, @Number" +
                "Rooms, @Breakfast, @CoffeBreakAM, @Lunch, @CoffeBreakPM, @Dinner, @Active);\r\nSEL" +
                "ECT IdEvent, IdRequest, IdAccommodationType, EventName, StartDate, EndDate, Star" +
                "tTime, EndTime, NumberParticipants, VideoBeam, Flipchart, FlipchartQuantity, Int" +
                "ernet, MinimumBandwith, RentedComputers, RentedComputerQuantity, ComputerSpecifi" +
                "cations, MicrophoneAmplification, MicrophoneSpecifications, SimultaneusTranslati" +
                "on, Language, OtherResources, NumberPassengers, Origin, Destination, NumberRooms" +
                ", Breakfast, CoffeBreakAM, Lunch, CoffeBreakPM, Dinner, Active FROM Purchase.Eve" +
                "nts WHERE (IdEvent = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdAccommodationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdAccommodationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EventName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EventName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberParticipants", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberParticipants", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VideoBeam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoBeam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flipchart", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flipchart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlipchartQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlipchartQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internet", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumBandwith", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumBandwith", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentedComputers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentedComputerQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputerQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComputerSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerSpecifications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicrophoneAmplification", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneAmplification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicrophoneSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneSpecifications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SimultaneusTranslation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimultaneusTranslation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Language", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Language", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherResources", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherResources", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberPassengers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberPassengers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Origin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Origin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Destination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberRooms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberRooms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Breakfast", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Breakfast", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoffeBreakAM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lunch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lunch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoffeBreakPM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakPM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dinner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dinner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Purchase].[Events] SET [IdRequest] = @IdRequest, [IdAccommodationType] = " +
                "@IdAccommodationType, [EventName] = @EventName, [StartDate] = @StartDate, [EndDa" +
                "te] = @EndDate, [StartTime] = @StartTime, [EndTime] = @EndTime, [NumberParticipa" +
                "nts] = @NumberParticipants, [VideoBeam] = @VideoBeam, [Flipchart] = @Flipchart, " +
                "[FlipchartQuantity] = @FlipchartQuantity, [Internet] = @Internet, [MinimumBandwi" +
                "th] = @MinimumBandwith, [RentedComputers] = @RentedComputers, [RentedComputerQua" +
                "ntity] = @RentedComputerQuantity, [ComputerSpecifications] = @ComputerSpecificat" +
                "ions, [MicrophoneAmplification] = @MicrophoneAmplification, [MicrophoneSpecifica" +
                "tions] = @MicrophoneSpecifications, [SimultaneusTranslation] = @SimultaneusTrans" +
                "lation, [Language] = @Language, [OtherResources] = @OtherResources, [NumberPasse" +
                "ngers] = @NumberPassengers, [Origin] = @Origin, [Destination] = @Destination, [N" +
                "umberRooms] = @NumberRooms, [Breakfast] = @Breakfast, [CoffeBreakAM] = @CoffeBre" +
                "akAM, [Lunch] = @Lunch, [CoffeBreakPM] = @CoffeBreakPM, [Dinner] = @Dinner, [Act" +
                "ive] = @Active WHERE (([IdEvent] = @Original_IdEvent) AND ([IdRequest] = @Origin" +
                "al_IdRequest) AND ((@IsNull_IdAccommodationType = 1 AND [IdAccommodationType] IS" +
                " NULL) OR ([IdAccommodationType] = @Original_IdAccommodationType)) AND ([EventNa" +
                "me] = @Original_EventName) AND ([StartDate] = @Original_StartDate) AND ([EndDate" +
                "] = @Original_EndDate) AND ([StartTime] = @Original_StartTime) AND ([EndTime] = " +
                "@Original_EndTime) AND ([NumberParticipants] = @Original_NumberParticipants) AND" +
                " ([VideoBeam] = @Original_VideoBeam) AND ([Flipchart] = @Original_Flipchart) AND" +
                " ([FlipchartQuantity] = @Original_FlipchartQuantity) AND ([Internet] = @Original" +
                "_Internet) AND ([MinimumBandwith] = @Original_MinimumBandwith) AND ([RentedCompu" +
                "ters] = @Original_RentedComputers) AND ([RentedComputerQuantity] = @Original_Ren" +
                "tedComputerQuantity) AND ([ComputerSpecifications] = @Original_ComputerSpecifica" +
                "tions) AND ([MicrophoneAmplification] = @Original_MicrophoneAmplification) AND (" +
                "[MicrophoneSpecifications] = @Original_MicrophoneSpecifications) AND ([Simultane" +
                "usTranslation] = @Original_SimultaneusTranslation) AND ([Language] = @Original_L" +
                "anguage) AND ([OtherResources] = @Original_OtherResources) AND ([NumberPassenger" +
                "s] = @Original_NumberPassengers) AND ([Origin] = @Original_Origin) AND ([Destina" +
                "tion] = @Original_Destination) AND ([NumberRooms] = @Original_NumberRooms) AND (" +
                "[Breakfast] = @Original_Breakfast) AND ([CoffeBreakAM] = @Original_CoffeBreakAM)" +
                " AND ([Lunch] = @Original_Lunch) AND ([CoffeBreakPM] = @Original_CoffeBreakPM) A" +
                "ND ([Dinner] = @Original_Dinner) AND ([Active] = @Original_Active));\r\nSELECT IdE" +
                "vent, IdRequest, IdAccommodationType, EventName, StartDate, EndDate, StartTime, " +
                "EndTime, NumberParticipants, VideoBeam, Flipchart, FlipchartQuantity, Internet, " +
                "MinimumBandwith, RentedComputers, RentedComputerQuantity, ComputerSpecifications" +
                ", MicrophoneAmplification, MicrophoneSpecifications, SimultaneusTranslation, Lan" +
                "guage, OtherResources, NumberPassengers, Origin, Destination, NumberRooms, Break" +
                "fast, CoffeBreakAM, Lunch, CoffeBreakPM, Dinner, Active FROM Purchase.Events WHE" +
                "RE (IdEvent = @IdEvent)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdAccommodationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdAccommodationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EventName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EventName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberParticipants", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberParticipants", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VideoBeam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoBeam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flipchart", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flipchart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlipchartQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlipchartQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internet", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumBandwith", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumBandwith", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentedComputers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentedComputerQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputerQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComputerSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerSpecifications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicrophoneAmplification", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneAmplification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicrophoneSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneSpecifications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SimultaneusTranslation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimultaneusTranslation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Language", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Language", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherResources", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherResources", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberPassengers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberPassengers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Origin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Origin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Destination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberRooms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberRooms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Breakfast", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Breakfast", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoffeBreakAM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lunch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lunch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoffeBreakPM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakPM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dinner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dinner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdEvent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdEvent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IdAccommodationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdAccommodationType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdAccommodationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdAccommodationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EventName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EventName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberParticipants", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberParticipants", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VideoBeam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoBeam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flipchart", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flipchart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlipchartQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlipchartQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internet", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinimumBandwith", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumBandwith", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentedComputers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentedComputerQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentedComputerQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComputerSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComputerSpecifications", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicrophoneAmplification", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneAmplification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicrophoneSpecifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrophoneSpecifications", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SimultaneusTranslation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimultaneusTranslation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Language", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Language", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherResources", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherResources", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberPassengers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberPassengers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Origin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Origin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Destination", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberRooms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberRooms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Breakfast", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Breakfast", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoffeBreakAM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lunch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lunch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoffeBreakPM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoffeBreakPM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dinner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dinner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdEvent", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IdEvent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WinApp.Properties.Settings.Default.ACNURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IdEvent, IdRequest, IdAccommodationType, EventName, StartDate, EndDate, StartTime, EndTime, NumberParticipants, VideoBeam, Flipchart, FlipchartQuantity, Internet, MinimumBandwith, RentedComputers, RentedComputerQuantity, ComputerSpecifications, MicrophoneAmplification, MicrophoneSpecifications, SimultaneusTranslation, Language, OtherResources, NumberPassengers, Origin, Destination, NumberRooms, Breakfast, CoffeBreakAM, Lunch, CoffeBreakPM, Dinner, Active FROM Purchase.Events";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSRequest.EventsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSRequest.EventsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSRequest.EventsDataTable dataTable = new DSRequest.EventsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest.EventsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest dataSet) {
            return this.Adapter.Update(dataSet, "Events");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IdEvent, 
                    int Original_IdRequest, 
                    global::System.Nullable<int> Original_IdAccommodationType, 
                    string Original_EventName, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndDate, 
                    System.TimeSpan Original_StartTime, 
                    System.TimeSpan Original_EndTime, 
                    int Original_NumberParticipants, 
                    bool Original_VideoBeam, 
                    bool Original_Flipchart, 
                    int Original_FlipchartQuantity, 
                    bool Original_Internet, 
                    int Original_MinimumBandwith, 
                    bool Original_RentedComputers, 
                    int Original_RentedComputerQuantity, 
                    string Original_ComputerSpecifications, 
                    bool Original_MicrophoneAmplification, 
                    string Original_MicrophoneSpecifications, 
                    bool Original_SimultaneusTranslation, 
                    string Original_Language, 
                    string Original_OtherResources, 
                    int Original_NumberPassengers, 
                    string Original_Origin, 
                    string Original_Destination, 
                    int Original_NumberRooms, 
                    bool Original_Breakfast, 
                    bool Original_CoffeBreakAM, 
                    bool Original_Lunch, 
                    bool Original_CoffeBreakPM, 
                    bool Original_Dinner, 
                    bool Original_Active) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IdEvent));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_IdRequest));
            if ((Original_IdAccommodationType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_IdAccommodationType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_EventName == null)) {
                throw new global::System.ArgumentNullException("Original_EventName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EventName));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_StartDate));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_EndDate));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.TimeSpan)(Original_StartTime));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.TimeSpan)(Original_EndTime));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_NumberParticipants));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_VideoBeam));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_Flipchart));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_FlipchartQuantity));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_Internet));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_MinimumBandwith));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_RentedComputers));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_RentedComputerQuantity));
            if ((Original_ComputerSpecifications == null)) {
                throw new global::System.ArgumentNullException("Original_ComputerSpecifications");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ComputerSpecifications));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_MicrophoneAmplification));
            if ((Original_MicrophoneSpecifications == null)) {
                throw new global::System.ArgumentNullException("Original_MicrophoneSpecifications");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_MicrophoneSpecifications));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_SimultaneusTranslation));
            if ((Original_Language == null)) {
                throw new global::System.ArgumentNullException("Original_Language");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Language));
            }
            if ((Original_OtherResources == null)) {
                throw new global::System.ArgumentNullException("Original_OtherResources");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_OtherResources));
            }
            this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_NumberPassengers));
            if ((Original_Origin == null)) {
                throw new global::System.ArgumentNullException("Original_Origin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Origin));
            }
            if ((Original_Destination == null)) {
                throw new global::System.ArgumentNullException("Original_Destination");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_Destination));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_NumberRooms));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_Breakfast));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_CoffeBreakAM));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_Lunch));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_CoffeBreakPM));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((bool)(Original_Dinner));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IdRequest, 
                    global::System.Nullable<int> IdAccommodationType, 
                    string EventName, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    System.TimeSpan StartTime, 
                    System.TimeSpan EndTime, 
                    int NumberParticipants, 
                    bool VideoBeam, 
                    bool Flipchart, 
                    int FlipchartQuantity, 
                    bool Internet, 
                    int MinimumBandwith, 
                    bool RentedComputers, 
                    int RentedComputerQuantity, 
                    string ComputerSpecifications, 
                    bool MicrophoneAmplification, 
                    string MicrophoneSpecifications, 
                    bool SimultaneusTranslation, 
                    string Language, 
                    string OtherResources, 
                    int NumberPassengers, 
                    string Origin, 
                    string Destination, 
                    int NumberRooms, 
                    bool Breakfast, 
                    bool CoffeBreakAM, 
                    bool Lunch, 
                    bool CoffeBreakPM, 
                    bool Dinner, 
                    bool Active) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IdRequest));
            if ((IdAccommodationType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(IdAccommodationType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EventName == null)) {
                throw new global::System.ArgumentNullException("EventName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EventName));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(StartDate));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(EndDate));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.TimeSpan)(StartTime));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.TimeSpan)(EndTime));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(NumberParticipants));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(VideoBeam));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(Flipchart));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(FlipchartQuantity));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(Internet));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(MinimumBandwith));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(RentedComputers));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(RentedComputerQuantity));
            if ((ComputerSpecifications == null)) {
                throw new global::System.ArgumentNullException("ComputerSpecifications");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ComputerSpecifications));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(MicrophoneAmplification));
            if ((MicrophoneSpecifications == null)) {
                throw new global::System.ArgumentNullException("MicrophoneSpecifications");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(MicrophoneSpecifications));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(SimultaneusTranslation));
            if ((Language == null)) {
                throw new global::System.ArgumentNullException("Language");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Language));
            }
            if ((OtherResources == null)) {
                throw new global::System.ArgumentNullException("OtherResources");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(OtherResources));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(NumberPassengers));
            if ((Origin == null)) {
                throw new global::System.ArgumentNullException("Origin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Origin));
            }
            if ((Destination == null)) {
                throw new global::System.ArgumentNullException("Destination");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Destination));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(NumberRooms));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(Breakfast));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(CoffeBreakAM));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(Lunch));
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(CoffeBreakPM));
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(Dinner));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdRequest, 
                    global::System.Nullable<int> IdAccommodationType, 
                    string EventName, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    System.TimeSpan StartTime, 
                    System.TimeSpan EndTime, 
                    int NumberParticipants, 
                    bool VideoBeam, 
                    bool Flipchart, 
                    int FlipchartQuantity, 
                    bool Internet, 
                    int MinimumBandwith, 
                    bool RentedComputers, 
                    int RentedComputerQuantity, 
                    string ComputerSpecifications, 
                    bool MicrophoneAmplification, 
                    string MicrophoneSpecifications, 
                    bool SimultaneusTranslation, 
                    string Language, 
                    string OtherResources, 
                    int NumberPassengers, 
                    string Origin, 
                    string Destination, 
                    int NumberRooms, 
                    bool Breakfast, 
                    bool CoffeBreakAM, 
                    bool Lunch, 
                    bool CoffeBreakPM, 
                    bool Dinner, 
                    bool Active, 
                    int Original_IdEvent, 
                    int Original_IdRequest, 
                    global::System.Nullable<int> Original_IdAccommodationType, 
                    string Original_EventName, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndDate, 
                    System.TimeSpan Original_StartTime, 
                    System.TimeSpan Original_EndTime, 
                    int Original_NumberParticipants, 
                    bool Original_VideoBeam, 
                    bool Original_Flipchart, 
                    int Original_FlipchartQuantity, 
                    bool Original_Internet, 
                    int Original_MinimumBandwith, 
                    bool Original_RentedComputers, 
                    int Original_RentedComputerQuantity, 
                    string Original_ComputerSpecifications, 
                    bool Original_MicrophoneAmplification, 
                    string Original_MicrophoneSpecifications, 
                    bool Original_SimultaneusTranslation, 
                    string Original_Language, 
                    string Original_OtherResources, 
                    int Original_NumberPassengers, 
                    string Original_Origin, 
                    string Original_Destination, 
                    int Original_NumberRooms, 
                    bool Original_Breakfast, 
                    bool Original_CoffeBreakAM, 
                    bool Original_Lunch, 
                    bool Original_CoffeBreakPM, 
                    bool Original_Dinner, 
                    bool Original_Active, 
                    int IdEvent) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IdRequest));
            if ((IdAccommodationType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(IdAccommodationType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EventName == null)) {
                throw new global::System.ArgumentNullException("EventName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EventName));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(StartDate));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(EndDate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.TimeSpan)(StartTime));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.TimeSpan)(EndTime));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(NumberParticipants));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(VideoBeam));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Flipchart));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(FlipchartQuantity));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Internet));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(MinimumBandwith));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(RentedComputers));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(RentedComputerQuantity));
            if ((ComputerSpecifications == null)) {
                throw new global::System.ArgumentNullException("ComputerSpecifications");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ComputerSpecifications));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(MicrophoneAmplification));
            if ((MicrophoneSpecifications == null)) {
                throw new global::System.ArgumentNullException("MicrophoneSpecifications");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(MicrophoneSpecifications));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(SimultaneusTranslation));
            if ((Language == null)) {
                throw new global::System.ArgumentNullException("Language");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Language));
            }
            if ((OtherResources == null)) {
                throw new global::System.ArgumentNullException("OtherResources");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(OtherResources));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(NumberPassengers));
            if ((Origin == null)) {
                throw new global::System.ArgumentNullException("Origin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Origin));
            }
            if ((Destination == null)) {
                throw new global::System.ArgumentNullException("Destination");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Destination));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(NumberRooms));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(Breakfast));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(CoffeBreakAM));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(Lunch));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(CoffeBreakPM));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Dinner));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Active));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_IdEvent));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_IdRequest));
            if ((Original_IdAccommodationType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_IdAccommodationType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_EventName == null)) {
                throw new global::System.ArgumentNullException("Original_EventName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_EventName));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_StartDate));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_EndDate));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((System.TimeSpan)(Original_StartTime));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((System.TimeSpan)(Original_EndTime));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_NumberParticipants));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Original_VideoBeam));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(Original_Flipchart));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_FlipchartQuantity));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Original_Internet));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_MinimumBandwith));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(Original_RentedComputers));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_RentedComputerQuantity));
            if ((Original_ComputerSpecifications == null)) {
                throw new global::System.ArgumentNullException("Original_ComputerSpecifications");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ComputerSpecifications));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_MicrophoneAmplification));
            if ((Original_MicrophoneSpecifications == null)) {
                throw new global::System.ArgumentNullException("Original_MicrophoneSpecifications");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_MicrophoneSpecifications));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_SimultaneusTranslation));
            if ((Original_Language == null)) {
                throw new global::System.ArgumentNullException("Original_Language");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Language));
            }
            if ((Original_OtherResources == null)) {
                throw new global::System.ArgumentNullException("Original_OtherResources");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_OtherResources));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_NumberPassengers));
            if ((Original_Origin == null)) {
                throw new global::System.ArgumentNullException("Original_Origin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Origin));
            }
            if ((Original_Destination == null)) {
                throw new global::System.ArgumentNullException("Original_Destination");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Destination));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_NumberRooms));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_Breakfast));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_CoffeBreakAM));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(Original_Lunch));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_CoffeBreakPM));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_Dinner));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Original_Active));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(IdEvent));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdRequest, 
                    global::System.Nullable<int> IdAccommodationType, 
                    string EventName, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    System.TimeSpan StartTime, 
                    System.TimeSpan EndTime, 
                    int NumberParticipants, 
                    bool VideoBeam, 
                    bool Flipchart, 
                    int FlipchartQuantity, 
                    bool Internet, 
                    int MinimumBandwith, 
                    bool RentedComputers, 
                    int RentedComputerQuantity, 
                    string ComputerSpecifications, 
                    bool MicrophoneAmplification, 
                    string MicrophoneSpecifications, 
                    bool SimultaneusTranslation, 
                    string Language, 
                    string OtherResources, 
                    int NumberPassengers, 
                    string Origin, 
                    string Destination, 
                    int NumberRooms, 
                    bool Breakfast, 
                    bool CoffeBreakAM, 
                    bool Lunch, 
                    bool CoffeBreakPM, 
                    bool Dinner, 
                    bool Active, 
                    int Original_IdEvent, 
                    int Original_IdRequest, 
                    global::System.Nullable<int> Original_IdAccommodationType, 
                    string Original_EventName, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndDate, 
                    System.TimeSpan Original_StartTime, 
                    System.TimeSpan Original_EndTime, 
                    int Original_NumberParticipants, 
                    bool Original_VideoBeam, 
                    bool Original_Flipchart, 
                    int Original_FlipchartQuantity, 
                    bool Original_Internet, 
                    int Original_MinimumBandwith, 
                    bool Original_RentedComputers, 
                    int Original_RentedComputerQuantity, 
                    string Original_ComputerSpecifications, 
                    bool Original_MicrophoneAmplification, 
                    string Original_MicrophoneSpecifications, 
                    bool Original_SimultaneusTranslation, 
                    string Original_Language, 
                    string Original_OtherResources, 
                    int Original_NumberPassengers, 
                    string Original_Origin, 
                    string Original_Destination, 
                    int Original_NumberRooms, 
                    bool Original_Breakfast, 
                    bool Original_CoffeBreakAM, 
                    bool Original_Lunch, 
                    bool Original_CoffeBreakPM, 
                    bool Original_Dinner, 
                    bool Original_Active) {
            return this.Update(IdRequest, IdAccommodationType, EventName, StartDate, EndDate, StartTime, EndTime, NumberParticipants, VideoBeam, Flipchart, FlipchartQuantity, Internet, MinimumBandwith, RentedComputers, RentedComputerQuantity, ComputerSpecifications, MicrophoneAmplification, MicrophoneSpecifications, SimultaneusTranslation, Language, OtherResources, NumberPassengers, Origin, Destination, NumberRooms, Breakfast, CoffeBreakAM, Lunch, CoffeBreakPM, Dinner, Active, Original_IdEvent, Original_IdRequest, Original_IdAccommodationType, Original_EventName, Original_StartDate, Original_EndDate, Original_StartTime, Original_EndTime, Original_NumberParticipants, Original_VideoBeam, Original_Flipchart, Original_FlipchartQuantity, Original_Internet, Original_MinimumBandwith, Original_RentedComputers, Original_RentedComputerQuantity, Original_ComputerSpecifications, Original_MicrophoneAmplification, Original_MicrophoneSpecifications, Original_SimultaneusTranslation, Original_Language, Original_OtherResources, Original_NumberPassengers, Original_Origin, Original_Destination, Original_NumberRooms, Original_Breakfast, Original_CoffeBreakAM, Original_Lunch, Original_CoffeBreakPM, Original_Dinner, Original_Active, Original_IdEvent);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GoodsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GoodsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Goods";
            tableMapping.ColumnMappings.Add("IdGoods", "IdGoods");
            tableMapping.ColumnMappings.Add("IdRequest", "IdRequest");
            tableMapping.ColumnMappings.Add("IdUnitMeasure", "IdUnitMeasure");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("ManufacturerBrand", "ManufacturerBrand");
            tableMapping.ColumnMappings.Add("Model", "Model");
            tableMapping.ColumnMappings.Add("Reference", "Reference");
            tableMapping.ColumnMappings.Add("Dimensions", "Dimensions");
            tableMapping.ColumnMappings.Add("Color", "Color");
            tableMapping.ColumnMappings.Add("Capacity", "Capacity");
            tableMapping.ColumnMappings.Add("Power", "Power");
            tableMapping.ColumnMappings.Add("Other", "Other");
            tableMapping.ColumnMappings.Add("PlaceDelivery", "PlaceDelivery");
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson");
            tableMapping.ColumnMappings.Add("ExpectedDeliveryDate", "ExpectedDeliveryDate");
            tableMapping.ColumnMappings.Add("Observations", "Observations");
            tableMapping.ColumnMappings.Add("Active", "Active");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Purchase].[Goods] WHERE (([IdGoods] = @Original_IdGoods) AND ([IdRequest] = @Original_IdRequest) AND ((@IsNull_IdUnitMeasure = 1 AND [IdUnitMeasure] IS NULL) OR ([IdUnitMeasure] = @Original_IdUnitMeasure)) AND ([Quantity] = @Original_Quantity) AND ([Description] = @Original_Description) AND ([ManufacturerBrand] = @Original_ManufacturerBrand) AND ([Model] = @Original_Model) AND ([Reference] = @Original_Reference) AND ([Dimensions] = @Original_Dimensions) AND ([Color] = @Original_Color) AND ([Capacity] = @Original_Capacity) AND ([Power] = @Original_Power) AND ([Other] = @Original_Other) AND ([PlaceDelivery] = @Original_PlaceDelivery) AND ([ContactPerson] = @Original_ContactPerson) AND ([ExpectedDeliveryDate] = @Original_ExpectedDeliveryDate) AND ([Observations] = @Original_Observations) AND ([Active] = @Original_Active))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdGoods", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdGoods", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IdUnitMeasure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdUnitMeasure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdUnitMeasure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdUnitMeasure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufacturerBrand", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerBrand", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dimensions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimensions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Other", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Other", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlaceDelivery", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlaceDelivery", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Purchase].[Goods] ([IdRequest], [IdUnitMeasure], [Quantity], [Description], [ManufacturerBrand], [Model], [Reference], [Dimensions], [Color], [Capacity], [Power], [Other], [PlaceDelivery], [ContactPerson], [ExpectedDeliveryDate], [Observations], [Active]) VALUES (@IdRequest, @IdUnitMeasure, @Quantity, @Description, @ManufacturerBrand, @Model, @Reference, @Dimensions, @Color, @Capacity, @Power, @Other, @PlaceDelivery, @ContactPerson, @ExpectedDeliveryDate, @Observations, @Active);
SELECT IdGoods, IdRequest, IdUnitMeasure, Quantity, Description, ManufacturerBrand, Model, Reference, Dimensions, Color, Capacity, Power, Other, PlaceDelivery, ContactPerson, ExpectedDeliveryDate, Observations, Active FROM Purchase.Goods WHERE (IdGoods = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdUnitMeasure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdUnitMeasure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerBrand", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerBrand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimensions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimensions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Other", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Other", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlaceDelivery", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlaceDelivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Purchase].[Goods] SET [IdRequest] = @IdRequest, [IdUnitMeasure] = @IdUnit" +
                "Measure, [Quantity] = @Quantity, [Description] = @Description, [ManufacturerBran" +
                "d] = @ManufacturerBrand, [Model] = @Model, [Reference] = @Reference, [Dimensions" +
                "] = @Dimensions, [Color] = @Color, [Capacity] = @Capacity, [Power] = @Power, [Ot" +
                "her] = @Other, [PlaceDelivery] = @PlaceDelivery, [ContactPerson] = @ContactPerso" +
                "n, [ExpectedDeliveryDate] = @ExpectedDeliveryDate, [Observations] = @Observation" +
                "s, [Active] = @Active WHERE (([IdGoods] = @Original_IdGoods) AND ([IdRequest] = " +
                "@Original_IdRequest) AND ((@IsNull_IdUnitMeasure = 1 AND [IdUnitMeasure] IS NULL" +
                ") OR ([IdUnitMeasure] = @Original_IdUnitMeasure)) AND ([Quantity] = @Original_Qu" +
                "antity) AND ([Description] = @Original_Description) AND ([ManufacturerBrand] = @" +
                "Original_ManufacturerBrand) AND ([Model] = @Original_Model) AND ([Reference] = @" +
                "Original_Reference) AND ([Dimensions] = @Original_Dimensions) AND ([Color] = @Or" +
                "iginal_Color) AND ([Capacity] = @Original_Capacity) AND ([Power] = @Original_Pow" +
                "er) AND ([Other] = @Original_Other) AND ([PlaceDelivery] = @Original_PlaceDelive" +
                "ry) AND ([ContactPerson] = @Original_ContactPerson) AND ([ExpectedDeliveryDate] " +
                "= @Original_ExpectedDeliveryDate) AND ([Observations] = @Original_Observations) " +
                "AND ([Active] = @Original_Active));\r\nSELECT IdGoods, IdRequest, IdUnitMeasure, Q" +
                "uantity, Description, ManufacturerBrand, Model, Reference, Dimensions, Color, Ca" +
                "pacity, Power, Other, PlaceDelivery, ContactPerson, ExpectedDeliveryDate, Observ" +
                "ations, Active FROM Purchase.Goods WHERE (IdGoods = @IdGoods)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdUnitMeasure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdUnitMeasure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerBrand", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerBrand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimensions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimensions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Other", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Other", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlaceDelivery", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlaceDelivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdGoods", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdGoods", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IdUnitMeasure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdUnitMeasure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdUnitMeasure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdUnitMeasure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufacturerBrand", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerBrand", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dimensions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimensions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Other", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Other", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlaceDelivery", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlaceDelivery", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdGoods", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IdGoods", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WinApp.Properties.Settings.Default.ACNURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IdGoods, IdRequest, IdUnitMeasure, Quantity, Description, ManufacturerBran" +
                "d, Model, Reference, Dimensions, Color, Capacity, Power, Other, PlaceDelivery, C" +
                "ontactPerson, ExpectedDeliveryDate, Observations, Active FROM Purchase.Goods";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSRequest.GoodsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSRequest.GoodsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSRequest.GoodsDataTable dataTable = new DSRequest.GoodsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest.GoodsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest dataSet) {
            return this.Adapter.Update(dataSet, "Goods");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IdGoods, 
                    int Original_IdRequest, 
                    global::System.Nullable<int> Original_IdUnitMeasure, 
                    double Original_Quantity, 
                    string Original_Description, 
                    string Original_ManufacturerBrand, 
                    string Original_Model, 
                    string Original_Reference, 
                    string Original_Dimensions, 
                    string Original_Color, 
                    string Original_Capacity, 
                    string Original_Power, 
                    string Original_Other, 
                    string Original_PlaceDelivery, 
                    string Original_ContactPerson, 
                    System.DateTime Original_ExpectedDeliveryDate, 
                    string Original_Observations, 
                    bool Original_Active) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IdGoods));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_IdRequest));
            if ((Original_IdUnitMeasure.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_IdUnitMeasure.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Quantity));
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Description));
            }
            if ((Original_ManufacturerBrand == null)) {
                throw new global::System.ArgumentNullException("Original_ManufacturerBrand");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ManufacturerBrand));
            }
            if ((Original_Model == null)) {
                throw new global::System.ArgumentNullException("Original_Model");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Model));
            }
            if ((Original_Reference == null)) {
                throw new global::System.ArgumentNullException("Original_Reference");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Reference));
            }
            if ((Original_Dimensions == null)) {
                throw new global::System.ArgumentNullException("Original_Dimensions");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Dimensions));
            }
            if ((Original_Color == null)) {
                throw new global::System.ArgumentNullException("Original_Color");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Color));
            }
            if ((Original_Capacity == null)) {
                throw new global::System.ArgumentNullException("Original_Capacity");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Capacity));
            }
            if ((Original_Power == null)) {
                throw new global::System.ArgumentNullException("Original_Power");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Power));
            }
            if ((Original_Other == null)) {
                throw new global::System.ArgumentNullException("Original_Other");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Other));
            }
            if ((Original_PlaceDelivery == null)) {
                throw new global::System.ArgumentNullException("Original_PlaceDelivery");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_PlaceDelivery));
            }
            if ((Original_ContactPerson == null)) {
                throw new global::System.ArgumentNullException("Original_ContactPerson");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ContactPerson));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_ExpectedDeliveryDate));
            if ((Original_Observations == null)) {
                throw new global::System.ArgumentNullException("Original_Observations");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Observations));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IdRequest, 
                    global::System.Nullable<int> IdUnitMeasure, 
                    double Quantity, 
                    string Description, 
                    string ManufacturerBrand, 
                    string Model, 
                    string Reference, 
                    string Dimensions, 
                    string Color, 
                    string Capacity, 
                    string Power, 
                    string Other, 
                    string PlaceDelivery, 
                    string ContactPerson, 
                    System.DateTime ExpectedDeliveryDate, 
                    string Observations, 
                    bool Active) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IdRequest));
            if ((IdUnitMeasure.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(IdUnitMeasure.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Quantity));
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((ManufacturerBrand == null)) {
                throw new global::System.ArgumentNullException("ManufacturerBrand");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ManufacturerBrand));
            }
            if ((Model == null)) {
                throw new global::System.ArgumentNullException("Model");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Model));
            }
            if ((Reference == null)) {
                throw new global::System.ArgumentNullException("Reference");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Reference));
            }
            if ((Dimensions == null)) {
                throw new global::System.ArgumentNullException("Dimensions");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Dimensions));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Color));
            }
            if ((Capacity == null)) {
                throw new global::System.ArgumentNullException("Capacity");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Capacity));
            }
            if ((Power == null)) {
                throw new global::System.ArgumentNullException("Power");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Power));
            }
            if ((Other == null)) {
                throw new global::System.ArgumentNullException("Other");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Other));
            }
            if ((PlaceDelivery == null)) {
                throw new global::System.ArgumentNullException("PlaceDelivery");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PlaceDelivery));
            }
            if ((ContactPerson == null)) {
                throw new global::System.ArgumentNullException("ContactPerson");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ContactPerson));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(ExpectedDeliveryDate));
            if ((Observations == null)) {
                throw new global::System.ArgumentNullException("Observations");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Observations));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdRequest, 
                    global::System.Nullable<int> IdUnitMeasure, 
                    double Quantity, 
                    string Description, 
                    string ManufacturerBrand, 
                    string Model, 
                    string Reference, 
                    string Dimensions, 
                    string Color, 
                    string Capacity, 
                    string Power, 
                    string Other, 
                    string PlaceDelivery, 
                    string ContactPerson, 
                    System.DateTime ExpectedDeliveryDate, 
                    string Observations, 
                    bool Active, 
                    int Original_IdGoods, 
                    int Original_IdRequest, 
                    global::System.Nullable<int> Original_IdUnitMeasure, 
                    double Original_Quantity, 
                    string Original_Description, 
                    string Original_ManufacturerBrand, 
                    string Original_Model, 
                    string Original_Reference, 
                    string Original_Dimensions, 
                    string Original_Color, 
                    string Original_Capacity, 
                    string Original_Power, 
                    string Original_Other, 
                    string Original_PlaceDelivery, 
                    string Original_ContactPerson, 
                    System.DateTime Original_ExpectedDeliveryDate, 
                    string Original_Observations, 
                    bool Original_Active, 
                    int IdGoods) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IdRequest));
            if ((IdUnitMeasure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(IdUnitMeasure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Quantity));
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((ManufacturerBrand == null)) {
                throw new global::System.ArgumentNullException("ManufacturerBrand");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ManufacturerBrand));
            }
            if ((Model == null)) {
                throw new global::System.ArgumentNullException("Model");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Model));
            }
            if ((Reference == null)) {
                throw new global::System.ArgumentNullException("Reference");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Reference));
            }
            if ((Dimensions == null)) {
                throw new global::System.ArgumentNullException("Dimensions");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Dimensions));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Color));
            }
            if ((Capacity == null)) {
                throw new global::System.ArgumentNullException("Capacity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Capacity));
            }
            if ((Power == null)) {
                throw new global::System.ArgumentNullException("Power");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Power));
            }
            if ((Other == null)) {
                throw new global::System.ArgumentNullException("Other");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Other));
            }
            if ((PlaceDelivery == null)) {
                throw new global::System.ArgumentNullException("PlaceDelivery");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PlaceDelivery));
            }
            if ((ContactPerson == null)) {
                throw new global::System.ArgumentNullException("ContactPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ContactPerson));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(ExpectedDeliveryDate));
            if ((Observations == null)) {
                throw new global::System.ArgumentNullException("Observations");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Observations));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Active));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_IdGoods));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_IdRequest));
            if ((Original_IdUnitMeasure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_IdUnitMeasure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_Quantity));
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Description));
            }
            if ((Original_ManufacturerBrand == null)) {
                throw new global::System.ArgumentNullException("Original_ManufacturerBrand");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ManufacturerBrand));
            }
            if ((Original_Model == null)) {
                throw new global::System.ArgumentNullException("Original_Model");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Model));
            }
            if ((Original_Reference == null)) {
                throw new global::System.ArgumentNullException("Original_Reference");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Reference));
            }
            if ((Original_Dimensions == null)) {
                throw new global::System.ArgumentNullException("Original_Dimensions");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Dimensions));
            }
            if ((Original_Color == null)) {
                throw new global::System.ArgumentNullException("Original_Color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Color));
            }
            if ((Original_Capacity == null)) {
                throw new global::System.ArgumentNullException("Original_Capacity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Capacity));
            }
            if ((Original_Power == null)) {
                throw new global::System.ArgumentNullException("Original_Power");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Power));
            }
            if ((Original_Other == null)) {
                throw new global::System.ArgumentNullException("Original_Other");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Other));
            }
            if ((Original_PlaceDelivery == null)) {
                throw new global::System.ArgumentNullException("Original_PlaceDelivery");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_PlaceDelivery));
            }
            if ((Original_ContactPerson == null)) {
                throw new global::System.ArgumentNullException("Original_ContactPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ContactPerson));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_ExpectedDeliveryDate));
            if ((Original_Observations == null)) {
                throw new global::System.ArgumentNullException("Original_Observations");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Observations));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_Active));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(IdGoods));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdRequest, 
                    global::System.Nullable<int> IdUnitMeasure, 
                    double Quantity, 
                    string Description, 
                    string ManufacturerBrand, 
                    string Model, 
                    string Reference, 
                    string Dimensions, 
                    string Color, 
                    string Capacity, 
                    string Power, 
                    string Other, 
                    string PlaceDelivery, 
                    string ContactPerson, 
                    System.DateTime ExpectedDeliveryDate, 
                    string Observations, 
                    bool Active, 
                    int Original_IdGoods, 
                    int Original_IdRequest, 
                    global::System.Nullable<int> Original_IdUnitMeasure, 
                    double Original_Quantity, 
                    string Original_Description, 
                    string Original_ManufacturerBrand, 
                    string Original_Model, 
                    string Original_Reference, 
                    string Original_Dimensions, 
                    string Original_Color, 
                    string Original_Capacity, 
                    string Original_Power, 
                    string Original_Other, 
                    string Original_PlaceDelivery, 
                    string Original_ContactPerson, 
                    System.DateTime Original_ExpectedDeliveryDate, 
                    string Original_Observations, 
                    bool Original_Active) {
            return this.Update(IdRequest, IdUnitMeasure, Quantity, Description, ManufacturerBrand, Model, Reference, Dimensions, Color, Capacity, Power, Other, PlaceDelivery, ContactPerson, ExpectedDeliveryDate, Observations, Active, Original_IdGoods, Original_IdRequest, Original_IdUnitMeasure, Original_Quantity, Original_Description, Original_ManufacturerBrand, Original_Model, Original_Reference, Original_Dimensions, Original_Color, Original_Capacity, Original_Power, Original_Other, Original_PlaceDelivery, Original_ContactPerson, Original_ExpectedDeliveryDate, Original_Observations, Original_Active, Original_IdGoods);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RequestTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RequestTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Request";
            tableMapping.ColumnMappings.Add("IdRequest", "IdRequest");
            tableMapping.ColumnMappings.Add("IdRequestUnit", "IdRequestUnit");
            tableMapping.ColumnMappings.Add("RequesterPerson", "RequesterPerson");
            tableMapping.ColumnMappings.Add("DutyStation", "DutyStation");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("Responsible", "Responsible");
            tableMapping.ColumnMappings.Add("BackgroundRationale", "BackgroundRationale");
            tableMapping.ColumnMappings.Add("DeliveryLocation", "DeliveryLocation");
            tableMapping.ColumnMappings.Add("EstimatedDeliveryDate", "EstimatedDeliveryDate");
            tableMapping.ColumnMappings.Add("Active", "Active");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Purchase].[Request] WHERE (([IdRequest] = @Original_IdRequest) AND ([IdRequestUnit] = @Original_IdRequestUnit) AND ([RequesterPerson] = @Original_RequesterPerson) AND ([DutyStation] = @Original_DutyStation) AND ([RequestDate] = @Original_RequestDate) AND ([Responsible] = @Original_Responsible) AND ([BackgroundRationale] = @Original_BackgroundRationale) AND ([DeliveryLocation] = @Original_DeliveryLocation) AND ([EstimatedDeliveryDate] = @Original_EstimatedDeliveryDate) AND ([Active] = @Original_Active))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequestUnit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequestUnit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequesterPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequesterPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DutyStation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyStation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Responsible", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Responsible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BackgroundRationale", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackgroundRationale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimatedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimatedDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Purchase].[Request] ([IdRequestUnit], [RequesterPerson], [DutyStation], [RequestDate], [Responsible], [BackgroundRationale], [DeliveryLocation], [EstimatedDeliveryDate], [Active]) VALUES (@IdRequestUnit, @RequesterPerson, @DutyStation, @RequestDate, @Responsible, @BackgroundRationale, @DeliveryLocation, @EstimatedDeliveryDate, @Active);
SELECT IdRequest, IdRequestUnit, RequesterPerson, DutyStation, RequestDate, Responsible, BackgroundRationale, DeliveryLocation, EstimatedDeliveryDate, Active FROM Purchase.Request WHERE (IdRequest = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequestUnit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequestUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequesterPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequesterPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DutyStation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyStation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Responsible", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Responsible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BackgroundRationale", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackgroundRationale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimatedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimatedDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Purchase].[Request] SET [IdRequestUnit] = @IdRequestUnit, [RequesterPerson] = @RequesterPerson, [DutyStation] = @DutyStation, [RequestDate] = @RequestDate, [Responsible] = @Responsible, [BackgroundRationale] = @BackgroundRationale, [DeliveryLocation] = @DeliveryLocation, [EstimatedDeliveryDate] = @EstimatedDeliveryDate, [Active] = @Active WHERE (([IdRequest] = @Original_IdRequest) AND ([IdRequestUnit] = @Original_IdRequestUnit) AND ([RequesterPerson] = @Original_RequesterPerson) AND ([DutyStation] = @Original_DutyStation) AND ([RequestDate] = @Original_RequestDate) AND ([Responsible] = @Original_Responsible) AND ([BackgroundRationale] = @Original_BackgroundRationale) AND ([DeliveryLocation] = @Original_DeliveryLocation) AND ([EstimatedDeliveryDate] = @Original_EstimatedDeliveryDate) AND ([Active] = @Original_Active));
SELECT IdRequest, IdRequestUnit, RequesterPerson, DutyStation, RequestDate, Responsible, BackgroundRationale, DeliveryLocation, EstimatedDeliveryDate, Active FROM Purchase.Request WHERE (IdRequest = @IdRequest)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequestUnit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequestUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequesterPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequesterPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DutyStation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyStation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Responsible", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Responsible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BackgroundRationale", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackgroundRationale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimatedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimatedDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequestUnit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequestUnit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequesterPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequesterPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DutyStation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyStation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Responsible", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Responsible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BackgroundRationale", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackgroundRationale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimatedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimatedDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequest", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WinApp.Properties.Settings.Default.ACNURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IdRequest, IdRequestUnit, RequesterPerson, DutyStation, RequestDate, Respo" +
                "nsible, BackgroundRationale, DeliveryLocation, EstimatedDeliveryDate, Active FRO" +
                "M Purchase.Request";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSRequest.RequestDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSRequest.RequestDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSRequest.RequestDataTable dataTable = new DSRequest.RequestDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest.RequestDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest dataSet) {
            return this.Adapter.Update(dataSet, "Request");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IdRequest, int Original_IdRequestUnit, string Original_RequesterPerson, string Original_DutyStation, System.DateTime Original_RequestDate, string Original_Responsible, string Original_BackgroundRationale, string Original_DeliveryLocation, System.DateTime Original_EstimatedDeliveryDate, bool Original_Active) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IdRequest));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_IdRequestUnit));
            if ((Original_RequesterPerson == null)) {
                throw new global::System.ArgumentNullException("Original_RequesterPerson");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_RequesterPerson));
            }
            if ((Original_DutyStation == null)) {
                throw new global::System.ArgumentNullException("Original_DutyStation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DutyStation));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_RequestDate));
            if ((Original_Responsible == null)) {
                throw new global::System.ArgumentNullException("Original_Responsible");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Responsible));
            }
            if ((Original_BackgroundRationale == null)) {
                throw new global::System.ArgumentNullException("Original_BackgroundRationale");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_BackgroundRationale));
            }
            if ((Original_DeliveryLocation == null)) {
                throw new global::System.ArgumentNullException("Original_DeliveryLocation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DeliveryLocation));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_EstimatedDeliveryDate));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IdRequestUnit, string RequesterPerson, string DutyStation, System.DateTime RequestDate, string Responsible, string BackgroundRationale, string DeliveryLocation, System.DateTime EstimatedDeliveryDate, bool Active) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IdRequestUnit));
            if ((RequesterPerson == null)) {
                throw new global::System.ArgumentNullException("RequesterPerson");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RequesterPerson));
            }
            if ((DutyStation == null)) {
                throw new global::System.ArgumentNullException("DutyStation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DutyStation));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(RequestDate));
            if ((Responsible == null)) {
                throw new global::System.ArgumentNullException("Responsible");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Responsible));
            }
            if ((BackgroundRationale == null)) {
                throw new global::System.ArgumentNullException("BackgroundRationale");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(BackgroundRationale));
            }
            if ((DeliveryLocation == null)) {
                throw new global::System.ArgumentNullException("DeliveryLocation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DeliveryLocation));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(EstimatedDeliveryDate));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdRequestUnit, 
                    string RequesterPerson, 
                    string DutyStation, 
                    System.DateTime RequestDate, 
                    string Responsible, 
                    string BackgroundRationale, 
                    string DeliveryLocation, 
                    System.DateTime EstimatedDeliveryDate, 
                    bool Active, 
                    int Original_IdRequest, 
                    int Original_IdRequestUnit, 
                    string Original_RequesterPerson, 
                    string Original_DutyStation, 
                    System.DateTime Original_RequestDate, 
                    string Original_Responsible, 
                    string Original_BackgroundRationale, 
                    string Original_DeliveryLocation, 
                    System.DateTime Original_EstimatedDeliveryDate, 
                    bool Original_Active, 
                    int IdRequest) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IdRequestUnit));
            if ((RequesterPerson == null)) {
                throw new global::System.ArgumentNullException("RequesterPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RequesterPerson));
            }
            if ((DutyStation == null)) {
                throw new global::System.ArgumentNullException("DutyStation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DutyStation));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(RequestDate));
            if ((Responsible == null)) {
                throw new global::System.ArgumentNullException("Responsible");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Responsible));
            }
            if ((BackgroundRationale == null)) {
                throw new global::System.ArgumentNullException("BackgroundRationale");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(BackgroundRationale));
            }
            if ((DeliveryLocation == null)) {
                throw new global::System.ArgumentNullException("DeliveryLocation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DeliveryLocation));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(EstimatedDeliveryDate));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Active));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_IdRequest));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_IdRequestUnit));
            if ((Original_RequesterPerson == null)) {
                throw new global::System.ArgumentNullException("Original_RequesterPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_RequesterPerson));
            }
            if ((Original_DutyStation == null)) {
                throw new global::System.ArgumentNullException("Original_DutyStation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DutyStation));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_RequestDate));
            if ((Original_Responsible == null)) {
                throw new global::System.ArgumentNullException("Original_Responsible");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Responsible));
            }
            if ((Original_BackgroundRationale == null)) {
                throw new global::System.ArgumentNullException("Original_BackgroundRationale");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_BackgroundRationale));
            }
            if ((Original_DeliveryLocation == null)) {
                throw new global::System.ArgumentNullException("Original_DeliveryLocation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_DeliveryLocation));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_EstimatedDeliveryDate));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_Active));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(IdRequest));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdRequestUnit, 
                    string RequesterPerson, 
                    string DutyStation, 
                    System.DateTime RequestDate, 
                    string Responsible, 
                    string BackgroundRationale, 
                    string DeliveryLocation, 
                    System.DateTime EstimatedDeliveryDate, 
                    bool Active, 
                    int Original_IdRequest, 
                    int Original_IdRequestUnit, 
                    string Original_RequesterPerson, 
                    string Original_DutyStation, 
                    System.DateTime Original_RequestDate, 
                    string Original_Responsible, 
                    string Original_BackgroundRationale, 
                    string Original_DeliveryLocation, 
                    System.DateTime Original_EstimatedDeliveryDate, 
                    bool Original_Active) {
            return this.Update(IdRequestUnit, RequesterPerson, DutyStation, RequestDate, Responsible, BackgroundRationale, DeliveryLocation, EstimatedDeliveryDate, Active, Original_IdRequest, Original_IdRequestUnit, Original_RequesterPerson, Original_DutyStation, Original_RequestDate, Original_Responsible, Original_BackgroundRationale, Original_DeliveryLocation, Original_EstimatedDeliveryDate, Original_Active, Original_IdRequest);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ServicesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Services";
            tableMapping.ColumnMappings.Add("IdService", "IdService");
            tableMapping.ColumnMappings.Add("IdServiceType", "IdServiceType");
            tableMapping.ColumnMappings.Add("IdRequest", "IdRequest");
            tableMapping.ColumnMappings.Add("Context", "Context");
            tableMapping.ColumnMappings.Add("NumberDays", "NumberDays");
            tableMapping.ColumnMappings.Add("HoursDay", "HoursDay");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("ServiceLocation", "ServiceLocation");
            tableMapping.ColumnMappings.Add("Specifications", "Specifications");
            tableMapping.ColumnMappings.Add("ServiceResult", "ServiceResult");
            tableMapping.ColumnMappings.Add("ExpectedDeliveryDate", "ExpectedDeliveryDate");
            tableMapping.ColumnMappings.Add("PriorDeliveryDate", "PriorDeliveryDate");
            tableMapping.ColumnMappings.Add("DeliveryPlace", "DeliveryPlace");
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson");
            tableMapping.ColumnMappings.Add("AlternativeDeliveryDate", "AlternativeDeliveryDate");
            tableMapping.ColumnMappings.Add("Observations", "Observations");
            tableMapping.ColumnMappings.Add("Active", "Active");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Purchase].[Services] WHERE (([IdService] = @Original_IdService) AND ([IdServiceType] = @Original_IdServiceType) AND ([IdRequest] = @Original_IdRequest) AND ([Context] = @Original_Context) AND ([NumberDays] = @Original_NumberDays) AND ([HoursDay] = @Original_HoursDay) AND ([Description] = @Original_Description) AND ([ServiceLocation] = @Original_ServiceLocation) AND ([Specifications] = @Original_Specifications) AND ([ServiceResult] = @Original_ServiceResult) AND ([ExpectedDeliveryDate] = @Original_ExpectedDeliveryDate) AND ([PriorDeliveryDate] = @Original_PriorDeliveryDate) AND ([DeliveryPlace] = @Original_DeliveryPlace) AND ([ContactPerson] = @Original_ContactPerson) AND ([AlternativeDeliveryDate] = @Original_AlternativeDeliveryDate) AND ([Observations] = @Original_Observations) AND ([Active] = @Original_Active))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdService", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdService", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdServiceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdServiceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Context", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Context", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoursDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoursDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServiceLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specifications", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServiceResult", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceResult", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriorDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriorDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryPlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternativeDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Purchase].[Services] ([IdServiceType], [IdRequest], [Context], [NumberDays], [HoursDay], [Description], [ServiceLocation], [Specifications], [ServiceResult], [ExpectedDeliveryDate], [PriorDeliveryDate], [DeliveryPlace], [ContactPerson], [AlternativeDeliveryDate], [Observations], [Active]) VALUES (@IdServiceType, @IdRequest, @Context, @NumberDays, @HoursDay, @Description, @ServiceLocation, @Specifications, @ServiceResult, @ExpectedDeliveryDate, @PriorDeliveryDate, @DeliveryPlace, @ContactPerson, @AlternativeDeliveryDate, @Observations, @Active);
SELECT IdService, IdServiceType, IdRequest, Context, NumberDays, HoursDay, Description, ServiceLocation, Specifications, ServiceResult, ExpectedDeliveryDate, PriorDeliveryDate, DeliveryPlace, ContactPerson, AlternativeDeliveryDate, Observations, Active FROM Purchase.Services WHERE (IdService = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdServiceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdServiceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Context", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Context", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoursDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoursDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specifications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceResult", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriorDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriorDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryPlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternativeDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Purchase].[Services] SET [IdServiceType] = @IdServiceType, [IdRequest] = " +
                "@IdRequest, [Context] = @Context, [NumberDays] = @NumberDays, [HoursDay] = @Hour" +
                "sDay, [Description] = @Description, [ServiceLocation] = @ServiceLocation, [Speci" +
                "fications] = @Specifications, [ServiceResult] = @ServiceResult, [ExpectedDeliver" +
                "yDate] = @ExpectedDeliveryDate, [PriorDeliveryDate] = @PriorDeliveryDate, [Deliv" +
                "eryPlace] = @DeliveryPlace, [ContactPerson] = @ContactPerson, [AlternativeDelive" +
                "ryDate] = @AlternativeDeliveryDate, [Observations] = @Observations, [Active] = @" +
                "Active WHERE (([IdService] = @Original_IdService) AND ([IdServiceType] = @Origin" +
                "al_IdServiceType) AND ([IdRequest] = @Original_IdRequest) AND ([Context] = @Orig" +
                "inal_Context) AND ([NumberDays] = @Original_NumberDays) AND ([HoursDay] = @Origi" +
                "nal_HoursDay) AND ([Description] = @Original_Description) AND ([ServiceLocation]" +
                " = @Original_ServiceLocation) AND ([Specifications] = @Original_Specifications) " +
                "AND ([ServiceResult] = @Original_ServiceResult) AND ([ExpectedDeliveryDate] = @O" +
                "riginal_ExpectedDeliveryDate) AND ([PriorDeliveryDate] = @Original_PriorDelivery" +
                "Date) AND ([DeliveryPlace] = @Original_DeliveryPlace) AND ([ContactPerson] = @Or" +
                "iginal_ContactPerson) AND ([AlternativeDeliveryDate] = @Original_AlternativeDeli" +
                "veryDate) AND ([Observations] = @Original_Observations) AND ([Active] = @Origina" +
                "l_Active));\r\nSELECT IdService, IdServiceType, IdRequest, Context, NumberDays, Ho" +
                "ursDay, Description, ServiceLocation, Specifications, ServiceResult, ExpectedDel" +
                "iveryDate, PriorDeliveryDate, DeliveryPlace, ContactPerson, AlternativeDeliveryD" +
                "ate, Observations, Active FROM Purchase.Services WHERE (IdService = @IdService)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdServiceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdServiceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Context", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Context", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoursDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoursDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specifications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceResult", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriorDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriorDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryPlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternativeDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdService", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdService", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdServiceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdServiceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdRequest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdRequest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Context", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Context", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoursDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoursDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServiceLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specifications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specifications", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServiceResult", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceResult", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpectedDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpectedDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriorDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriorDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryPlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternativeDeliveryDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeDeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Observations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdService", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IdService", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WinApp.Properties.Settings.Default.ACNURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IdService, IdServiceType, IdRequest, Context, NumberDays, HoursDay, Description, ServiceLocation, Specifications, ServiceResult, ExpectedDeliveryDate, PriorDeliveryDate, DeliveryPlace, ContactPerson, AlternativeDeliveryDate, Observations, Active FROM Purchase.Services";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSRequest.ServicesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSRequest.ServicesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSRequest.ServicesDataTable dataTable = new DSRequest.ServicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest.ServicesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSRequest dataSet) {
            return this.Adapter.Update(dataSet, "Services");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IdService, 
                    int Original_IdServiceType, 
                    int Original_IdRequest, 
                    string Original_Context, 
                    int Original_NumberDays, 
                    int Original_HoursDay, 
                    string Original_Description, 
                    string Original_ServiceLocation, 
                    string Original_Specifications, 
                    string Original_ServiceResult, 
                    System.DateTime Original_ExpectedDeliveryDate, 
                    System.DateTime Original_PriorDeliveryDate, 
                    string Original_DeliveryPlace, 
                    string Original_ContactPerson, 
                    System.DateTime Original_AlternativeDeliveryDate, 
                    string Original_Observations, 
                    bool Original_Active) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IdService));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_IdServiceType));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_IdRequest));
            if ((Original_Context == null)) {
                throw new global::System.ArgumentNullException("Original_Context");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Context));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_NumberDays));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_HoursDay));
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Description));
            }
            if ((Original_ServiceLocation == null)) {
                throw new global::System.ArgumentNullException("Original_ServiceLocation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ServiceLocation));
            }
            if ((Original_Specifications == null)) {
                throw new global::System.ArgumentNullException("Original_Specifications");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Specifications));
            }
            if ((Original_ServiceResult == null)) {
                throw new global::System.ArgumentNullException("Original_ServiceResult");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ServiceResult));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_ExpectedDeliveryDate));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_PriorDeliveryDate));
            if ((Original_DeliveryPlace == null)) {
                throw new global::System.ArgumentNullException("Original_DeliveryPlace");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_DeliveryPlace));
            }
            if ((Original_ContactPerson == null)) {
                throw new global::System.ArgumentNullException("Original_ContactPerson");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ContactPerson));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_AlternativeDeliveryDate));
            if ((Original_Observations == null)) {
                throw new global::System.ArgumentNullException("Original_Observations");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Observations));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IdServiceType, 
                    int IdRequest, 
                    string Context, 
                    int NumberDays, 
                    int HoursDay, 
                    string Description, 
                    string ServiceLocation, 
                    string Specifications, 
                    string ServiceResult, 
                    System.DateTime ExpectedDeliveryDate, 
                    System.DateTime PriorDeliveryDate, 
                    string DeliveryPlace, 
                    string ContactPerson, 
                    System.DateTime AlternativeDeliveryDate, 
                    string Observations, 
                    bool Active) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IdServiceType));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(IdRequest));
            if ((Context == null)) {
                throw new global::System.ArgumentNullException("Context");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Context));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(NumberDays));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(HoursDay));
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Description));
            }
            if ((ServiceLocation == null)) {
                throw new global::System.ArgumentNullException("ServiceLocation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ServiceLocation));
            }
            if ((Specifications == null)) {
                throw new global::System.ArgumentNullException("Specifications");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Specifications));
            }
            if ((ServiceResult == null)) {
                throw new global::System.ArgumentNullException("ServiceResult");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ServiceResult));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(ExpectedDeliveryDate));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(PriorDeliveryDate));
            if ((DeliveryPlace == null)) {
                throw new global::System.ArgumentNullException("DeliveryPlace");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(DeliveryPlace));
            }
            if ((ContactPerson == null)) {
                throw new global::System.ArgumentNullException("ContactPerson");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ContactPerson));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(AlternativeDeliveryDate));
            if ((Observations == null)) {
                throw new global::System.ArgumentNullException("Observations");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Observations));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(Active));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdServiceType, 
                    int IdRequest, 
                    string Context, 
                    int NumberDays, 
                    int HoursDay, 
                    string Description, 
                    string ServiceLocation, 
                    string Specifications, 
                    string ServiceResult, 
                    System.DateTime ExpectedDeliveryDate, 
                    System.DateTime PriorDeliveryDate, 
                    string DeliveryPlace, 
                    string ContactPerson, 
                    System.DateTime AlternativeDeliveryDate, 
                    string Observations, 
                    bool Active, 
                    int Original_IdService, 
                    int Original_IdServiceType, 
                    int Original_IdRequest, 
                    string Original_Context, 
                    int Original_NumberDays, 
                    int Original_HoursDay, 
                    string Original_Description, 
                    string Original_ServiceLocation, 
                    string Original_Specifications, 
                    string Original_ServiceResult, 
                    System.DateTime Original_ExpectedDeliveryDate, 
                    System.DateTime Original_PriorDeliveryDate, 
                    string Original_DeliveryPlace, 
                    string Original_ContactPerson, 
                    System.DateTime Original_AlternativeDeliveryDate, 
                    string Original_Observations, 
                    bool Original_Active, 
                    int IdService) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IdServiceType));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(IdRequest));
            if ((Context == null)) {
                throw new global::System.ArgumentNullException("Context");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Context));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(NumberDays));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(HoursDay));
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Description));
            }
            if ((ServiceLocation == null)) {
                throw new global::System.ArgumentNullException("ServiceLocation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ServiceLocation));
            }
            if ((Specifications == null)) {
                throw new global::System.ArgumentNullException("Specifications");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Specifications));
            }
            if ((ServiceResult == null)) {
                throw new global::System.ArgumentNullException("ServiceResult");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ServiceResult));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(ExpectedDeliveryDate));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(PriorDeliveryDate));
            if ((DeliveryPlace == null)) {
                throw new global::System.ArgumentNullException("DeliveryPlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(DeliveryPlace));
            }
            if ((ContactPerson == null)) {
                throw new global::System.ArgumentNullException("ContactPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ContactPerson));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(AlternativeDeliveryDate));
            if ((Observations == null)) {
                throw new global::System.ArgumentNullException("Observations");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Observations));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Active));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_IdService));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_IdServiceType));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_IdRequest));
            if ((Original_Context == null)) {
                throw new global::System.ArgumentNullException("Original_Context");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Context));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_NumberDays));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_HoursDay));
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Description));
            }
            if ((Original_ServiceLocation == null)) {
                throw new global::System.ArgumentNullException("Original_ServiceLocation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ServiceLocation));
            }
            if ((Original_Specifications == null)) {
                throw new global::System.ArgumentNullException("Original_Specifications");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Specifications));
            }
            if ((Original_ServiceResult == null)) {
                throw new global::System.ArgumentNullException("Original_ServiceResult");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ServiceResult));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_ExpectedDeliveryDate));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_PriorDeliveryDate));
            if ((Original_DeliveryPlace == null)) {
                throw new global::System.ArgumentNullException("Original_DeliveryPlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_DeliveryPlace));
            }
            if ((Original_ContactPerson == null)) {
                throw new global::System.ArgumentNullException("Original_ContactPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_ContactPerson));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_AlternativeDeliveryDate));
            if ((Original_Observations == null)) {
                throw new global::System.ArgumentNullException("Original_Observations");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Observations));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_Active));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(IdService));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IdServiceType, 
                    int IdRequest, 
                    string Context, 
                    int NumberDays, 
                    int HoursDay, 
                    string Description, 
                    string ServiceLocation, 
                    string Specifications, 
                    string ServiceResult, 
                    System.DateTime ExpectedDeliveryDate, 
                    System.DateTime PriorDeliveryDate, 
                    string DeliveryPlace, 
                    string ContactPerson, 
                    System.DateTime AlternativeDeliveryDate, 
                    string Observations, 
                    bool Active, 
                    int Original_IdService, 
                    int Original_IdServiceType, 
                    int Original_IdRequest, 
                    string Original_Context, 
                    int Original_NumberDays, 
                    int Original_HoursDay, 
                    string Original_Description, 
                    string Original_ServiceLocation, 
                    string Original_Specifications, 
                    string Original_ServiceResult, 
                    System.DateTime Original_ExpectedDeliveryDate, 
                    System.DateTime Original_PriorDeliveryDate, 
                    string Original_DeliveryPlace, 
                    string Original_ContactPerson, 
                    System.DateTime Original_AlternativeDeliveryDate, 
                    string Original_Observations, 
                    bool Original_Active) {
            return this.Update(IdServiceType, IdRequest, Context, NumberDays, HoursDay, Description, ServiceLocation, Specifications, ServiceResult, ExpectedDeliveryDate, PriorDeliveryDate, DeliveryPlace, ContactPerson, AlternativeDeliveryDate, Observations, Active, Original_IdService, Original_IdServiceType, Original_IdRequest, Original_Context, Original_NumberDays, Original_HoursDay, Original_Description, Original_ServiceLocation, Original_Specifications, Original_ServiceResult, Original_ExpectedDeliveryDate, Original_PriorDeliveryDate, Original_DeliveryPlace, Original_ContactPerson, Original_AlternativeDeliveryDate, Original_Observations, Original_Active, Original_IdService);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EventsTableAdapter _eventsTableAdapter;
        
        private GoodsTableAdapter _goodsTableAdapter;
        
        private RequestTableAdapter _requestTableAdapter;
        
        private ServicesTableAdapter _servicesTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EventsTableAdapter EventsTableAdapter {
            get {
                return this._eventsTableAdapter;
            }
            set {
                this._eventsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public GoodsTableAdapter GoodsTableAdapter {
            get {
                return this._goodsTableAdapter;
            }
            set {
                this._goodsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RequestTableAdapter RequestTableAdapter {
            get {
                return this._requestTableAdapter;
            }
            set {
                this._requestTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ServicesTableAdapter ServicesTableAdapter {
            get {
                return this._servicesTableAdapter;
            }
            set {
                this._servicesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._eventsTableAdapter != null) 
                            && (this._eventsTableAdapter.Connection != null))) {
                    return this._eventsTableAdapter.Connection;
                }
                if (((this._goodsTableAdapter != null) 
                            && (this._goodsTableAdapter.Connection != null))) {
                    return this._goodsTableAdapter.Connection;
                }
                if (((this._requestTableAdapter != null) 
                            && (this._requestTableAdapter.Connection != null))) {
                    return this._requestTableAdapter.Connection;
                }
                if (((this._servicesTableAdapter != null) 
                            && (this._servicesTableAdapter.Connection != null))) {
                    return this._servicesTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._eventsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._goodsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._requestTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._servicesTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DSRequest dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._requestTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Request.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._requestTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eventsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Events.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eventsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._goodsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Goods.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._goodsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._servicesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Services.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._servicesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DSRequest dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._requestTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Request.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._requestTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eventsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Events.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eventsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._goodsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Goods.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._goodsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._servicesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Services.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._servicesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DSRequest dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._servicesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Services.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._servicesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._goodsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Goods.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._goodsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eventsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Events.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eventsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._requestTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Request.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._requestTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DSRequest dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._eventsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eventsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._goodsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._goodsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._requestTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._requestTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._servicesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._servicesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._eventsTableAdapter != null)) {
                    revertConnections.Add(this._eventsTableAdapter, this._eventsTableAdapter.Connection);
                    this._eventsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eventsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eventsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eventsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eventsTableAdapter.Adapter);
                    }
                }
                if ((this._goodsTableAdapter != null)) {
                    revertConnections.Add(this._goodsTableAdapter, this._goodsTableAdapter.Connection);
                    this._goodsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._goodsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._goodsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._goodsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._goodsTableAdapter.Adapter);
                    }
                }
                if ((this._requestTableAdapter != null)) {
                    revertConnections.Add(this._requestTableAdapter, this._requestTableAdapter.Connection);
                    this._requestTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._requestTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._requestTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._requestTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._requestTableAdapter.Adapter);
                    }
                }
                if ((this._servicesTableAdapter != null)) {
                    revertConnections.Add(this._servicesTableAdapter, this._servicesTableAdapter.Connection);
                    this._servicesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._servicesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._servicesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._servicesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._servicesTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._eventsTableAdapter != null)) {
                    this._eventsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eventsTableAdapter]));
                    this._eventsTableAdapter.Transaction = null;
                }
                if ((this._goodsTableAdapter != null)) {
                    this._goodsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._goodsTableAdapter]));
                    this._goodsTableAdapter.Transaction = null;
                }
                if ((this._requestTableAdapter != null)) {
                    this._requestTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._requestTableAdapter]));
                    this._requestTableAdapter.Transaction = null;
                }
                if ((this._servicesTableAdapter != null)) {
                    this._servicesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._servicesTableAdapter]));
                    this._servicesTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591